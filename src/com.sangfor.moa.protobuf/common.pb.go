// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package com_sangfor_moa_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 客户端类型
type PB_ClientDevType int32

const (
	PB_ClientDevType_PBCDT_ANDROID            PB_ClientDevType = 0
	PB_ClientDevType_PBCDT_IOS                PB_ClientDevType = 1
	PB_ClientDevType_PBCDT_WP                 PB_ClientDevType = 2
	PB_ClientDevType_PBCDT_SERVER             PB_ClientDevType = 3
	PB_ClientDevType_PBCDT_WEB                PB_ClientDevType = 4
	PB_ClientDevType_PBCDT_IOS_ENTERPRISE     PB_ClientDevType = 5
	PB_ClientDevType_PBCDT_ANDROID_ENTERPRISE PB_ClientDevType = 6
)

var PB_ClientDevType_name = map[int32]string{
	0: "PBCDT_ANDROID",
	1: "PBCDT_IOS",
	2: "PBCDT_WP",
	3: "PBCDT_SERVER",
	4: "PBCDT_WEB",
	5: "PBCDT_IOS_ENTERPRISE",
	6: "PBCDT_ANDROID_ENTERPRISE",
}
var PB_ClientDevType_value = map[string]int32{
	"PBCDT_ANDROID":            0,
	"PBCDT_IOS":                1,
	"PBCDT_WP":                 2,
	"PBCDT_SERVER":             3,
	"PBCDT_WEB":                4,
	"PBCDT_IOS_ENTERPRISE":     5,
	"PBCDT_ANDROID_ENTERPRISE": 6,
}

func (x PB_ClientDevType) Enum() *PB_ClientDevType {
	p := new(PB_ClientDevType)
	*p = x
	return p
}
func (x PB_ClientDevType) String() string {
	return proto.EnumName(PB_ClientDevType_name, int32(x))
}
func (x *PB_ClientDevType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_ClientDevType_value, data, "PB_ClientDevType")
	if err != nil {
		return err
	}
	*x = PB_ClientDevType(value)
	return nil
}
func (PB_ClientDevType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// = 地理位置
type PB_MapPostion struct {
	Mapaddr          *string  `protobuf:"bytes,1,opt,name=mapaddr" json:"mapaddr,omitempty"`
	Lon              *float64 `protobuf:"fixed64,2,opt,name=lon" json:"lon,omitempty"`
	Lat              *float64 `protobuf:"fixed64,3,opt,name=lat" json:"lat,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PB_MapPostion) Reset()                    { *m = PB_MapPostion{} }
func (m *PB_MapPostion) String() string            { return proto.CompactTextString(m) }
func (*PB_MapPostion) ProtoMessage()               {}
func (*PB_MapPostion) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *PB_MapPostion) GetMapaddr() string {
	if m != nil && m.Mapaddr != nil {
		return *m.Mapaddr
	}
	return ""
}

func (m *PB_MapPostion) GetLon() float64 {
	if m != nil && m.Lon != nil {
		return *m.Lon
	}
	return 0
}

func (m *PB_MapPostion) GetLat() float64 {
	if m != nil && m.Lat != nil {
		return *m.Lat
	}
	return 0
}

type PB_Form struct {
	Content          *string          `protobuf:"bytes,1,opt,name=content" json:"content,omitempty"`
	Attrs            []*PB_Attachment `protobuf:"bytes,2,rep,name=attrs" json:"attrs,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PB_Form) Reset()                    { *m = PB_Form{} }
func (m *PB_Form) String() string            { return proto.CompactTextString(m) }
func (*PB_Form) ProtoMessage()               {}
func (*PB_Form) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *PB_Form) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *PB_Form) GetAttrs() []*PB_Attachment {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func init() {
	proto.RegisterType((*PB_MapPostion)(nil), "com.sangfor.moa.protobuf.PB_MapPostion")
	proto.RegisterType((*PB_Form)(nil), "com.sangfor.moa.protobuf.PB_Form")
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_ClientDevType", PB_ClientDevType_name, PB_ClientDevType_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x8f, 0x41, 0x4f, 0x32, 0x31,
	0x10, 0x86, 0xbf, 0x65, 0x3f, 0x44, 0x46, 0x48, 0x6a, 0xe3, 0xa1, 0x31, 0x1e, 0x08, 0x17, 0x89,
	0x87, 0x3d, 0x78, 0xf7, 0xc0, 0xb2, 0x35, 0xe1, 0x00, 0x34, 0x85, 0xc8, 0xb1, 0x29, 0xcb, 0xa2,
	0x24, 0xb4, 0xb3, 0x59, 0x46, 0x13, 0x7f, 0x8b, 0x7f, 0xd6, 0xac, 0x05, 0xd4, 0x83, 0xb7, 0x3e,
	0x4f, 0x3b, 0x6f, 0xdf, 0x81, 0x4e, 0x8e, 0xce, 0xa1, 0x4f, 0xca, 0x0a, 0x09, 0xb9, 0xc8, 0xd1,
	0x25, 0x7b, 0xeb, 0x9f, 0x37, 0x58, 0x25, 0x0e, 0x6d, 0xd0, 0xab, 0xd7, 0xcd, 0x35, 0xb3, 0x44,
	0x36, 0x7f, 0x71, 0x85, 0xa7, 0x20, 0xfb, 0x13, 0xe8, 0xaa, 0xd4, 0x4c, 0x6c, 0xa9, 0x70, 0x4f,
	0x5b, 0xf4, 0x5c, 0x40, 0xcb, 0xd9, 0xd2, 0xae, 0xd7, 0x95, 0x88, 0x7a, 0xd1, 0xa0, 0xad, 0x8f,
	0xc8, 0x19, 0xc4, 0x3b, 0xf4, 0xa2, 0xd1, 0x8b, 0x06, 0x91, 0xae, 0x8f, 0x5f, 0xc6, 0x92, 0x88,
	0x0f, 0xc6, 0x52, 0x7f, 0x05, 0x2d, 0x95, 0x9a, 0x47, 0xac, 0x5c, 0x1d, 0x94, 0xa3, 0xa7, 0xc2,
	0xd3, 0x31, 0xe8, 0x80, 0xfc, 0x01, 0x9a, 0x96, 0xa8, 0xda, 0x8b, 0x46, 0x2f, 0x1e, 0x5c, 0xdc,
	0xdf, 0x26, 0x7f, 0xf5, 0x4d, 0x54, 0x6a, 0x86, 0xa7, 0xc6, 0x3a, 0x4c, 0xdd, 0x7d, 0x44, 0xc0,
	0x54, 0x6a, 0x46, 0xbb, 0x6d, 0xe1, 0x29, 0x2b, 0xde, 0x16, 0xef, 0x65, 0xc1, 0x2f, 0xeb, 0x3d,
	0x46, 0xd9, 0xc2, 0x0c, 0xa7, 0x99, 0x9e, 0x8d, 0x33, 0xf6, 0x8f, 0x77, 0xa1, 0x1d, 0xd4, 0x78,
	0x36, 0x67, 0x11, 0xef, 0xc0, 0x79, 0xc0, 0xa5, 0x62, 0x0d, 0xce, 0xa0, 0x13, 0x68, 0x2e, 0xf5,
	0x93, 0xd4, 0x2c, 0xfe, 0x7e, 0xbe, 0x94, 0x29, 0xfb, 0xcf, 0x05, 0x5c, 0x9d, 0xa6, 0x8d, 0x9c,
	0x2e, 0xa4, 0x56, 0x7a, 0x3c, 0x97, 0xac, 0xc9, 0x6f, 0x40, 0xfc, 0xfa, 0xea, 0xe7, 0xed, 0xd9,
	0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x76, 0x50, 0x79, 0xf5, 0x8b, 0x01, 0x00, 0x00,
}
