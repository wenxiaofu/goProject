// Code generated by protoc-gen-go. DO NOT EDIT.
// source: srvhead.proto

package com_sangfor_moa_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_ModMsgId struct {
	ClientReqId       *uint64 `protobuf:"varint,1,opt,name=client_req_id,json=clientReqId" json:"client_req_id,omitempty"`
	DispReqId         *uint64 `protobuf:"varint,2,opt,name=disp_req_id,json=dispReqId" json:"disp_req_id,omitempty"`
	WorkflowReqId     *uint64 `protobuf:"varint,7,opt,name=workflow_req_id,json=workflowReqId" json:"workflow_req_id,omitempty"`
	ServermapReqId    *uint64 `protobuf:"varint,14,opt,name=servermap_req_id,json=servermapReqId" json:"servermap_req_id,omitempty"`
	NotifyReqId       *uint64 `protobuf:"varint,17,opt,name=notify_req_id,json=notifyReqId" json:"notify_req_id,omitempty"`
	FileReqId         *uint64 `protobuf:"varint,18,opt,name=file_req_id,json=fileReqId" json:"file_req_id,omitempty"`
	SrvrpcReqId       *uint64 `protobuf:"varint,19,opt,name=srvrpc_req_id,json=srvrpcReqId" json:"srvrpc_req_id,omitempty"`
	EntryReqId        *uint64 `protobuf:"varint,20,opt,name=entry_req_id,json=entryReqId" json:"entry_req_id,omitempty"`
	WorkflowdispReqId *uint64 `protobuf:"varint,21,opt,name=workflowdisp_req_id,json=workflowdispReqId" json:"workflowdisp_req_id,omitempty"`
	MtunnelReqId      *uint64 `protobuf:"varint,22,opt,name=mtunnel_req_id,json=mtunnelReqId" json:"mtunnel_req_id,omitempty"`
	WebReqId          *uint64 `protobuf:"varint,23,opt,name=web_req_id,json=webReqId" json:"web_req_id,omitempty"`
	RegReqId          *uint64 `protobuf:"varint,24,opt,name=reg_req_id,json=regReqId" json:"reg_req_id,omitempty"`
	HttpportReqId     *uint64 `protobuf:"varint,25,opt,name=httpport_req_id,json=httpportReqId" json:"httpport_req_id,omitempty"`
	OprtproxyReqId    *uint64 `protobuf:"varint,26,opt,name=oprtproxy_req_id,json=oprtproxyReqId" json:"oprtproxy_req_id,omitempty"`
	OprtdispReqId     *uint64 `protobuf:"varint,27,opt,name=oprtdisp_req_id,json=oprtdispReqId" json:"oprtdisp_req_id,omitempty"`
	LegworkReqId      *uint64 `protobuf:"varint,28,opt,name=legwork_req_id,json=legworkReqId" json:"legwork_req_id,omitempty"`
	PermitReqId       *uint64 `protobuf:"varint,29,opt,name=permit_req_id,json=permitReqId" json:"permit_req_id,omitempty"`
	MessageproxyReqId *uint64 `protobuf:"varint,30,opt,name=messageproxy_req_id,json=messageproxyReqId" json:"messageproxy_req_id,omitempty"`
	// srv  optional uint64 pack_id = 50;      //服务端查bug用，已经用srv注释掉了。客户端不关注
	// BEGIN: access related
	AccConnId        *uint64 `protobuf:"varint,51,opt,name=acc_conn_id,json=accConnId" json:"acc_conn_id,omitempty"`
	TmpAccConnId     *uint64 `protobuf:"varint,52,opt,name=tmp_acc_conn_id,json=tmpAccConnId" json:"tmp_acc_conn_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_ModMsgId) Reset()                    { *m = PB_ModMsgId{} }
func (m *PB_ModMsgId) String() string            { return proto.CompactTextString(m) }
func (*PB_ModMsgId) ProtoMessage()               {}
func (*PB_ModMsgId) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *PB_ModMsgId) GetClientReqId() uint64 {
	if m != nil && m.ClientReqId != nil {
		return *m.ClientReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetDispReqId() uint64 {
	if m != nil && m.DispReqId != nil {
		return *m.DispReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetWorkflowReqId() uint64 {
	if m != nil && m.WorkflowReqId != nil {
		return *m.WorkflowReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetServermapReqId() uint64 {
	if m != nil && m.ServermapReqId != nil {
		return *m.ServermapReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetNotifyReqId() uint64 {
	if m != nil && m.NotifyReqId != nil {
		return *m.NotifyReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetFileReqId() uint64 {
	if m != nil && m.FileReqId != nil {
		return *m.FileReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetSrvrpcReqId() uint64 {
	if m != nil && m.SrvrpcReqId != nil {
		return *m.SrvrpcReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetEntryReqId() uint64 {
	if m != nil && m.EntryReqId != nil {
		return *m.EntryReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetWorkflowdispReqId() uint64 {
	if m != nil && m.WorkflowdispReqId != nil {
		return *m.WorkflowdispReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetMtunnelReqId() uint64 {
	if m != nil && m.MtunnelReqId != nil {
		return *m.MtunnelReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetWebReqId() uint64 {
	if m != nil && m.WebReqId != nil {
		return *m.WebReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetRegReqId() uint64 {
	if m != nil && m.RegReqId != nil {
		return *m.RegReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetHttpportReqId() uint64 {
	if m != nil && m.HttpportReqId != nil {
		return *m.HttpportReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetOprtproxyReqId() uint64 {
	if m != nil && m.OprtproxyReqId != nil {
		return *m.OprtproxyReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetOprtdispReqId() uint64 {
	if m != nil && m.OprtdispReqId != nil {
		return *m.OprtdispReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetLegworkReqId() uint64 {
	if m != nil && m.LegworkReqId != nil {
		return *m.LegworkReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetPermitReqId() uint64 {
	if m != nil && m.PermitReqId != nil {
		return *m.PermitReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetMessageproxyReqId() uint64 {
	if m != nil && m.MessageproxyReqId != nil {
		return *m.MessageproxyReqId
	}
	return 0
}

func (m *PB_ModMsgId) GetAccConnId() uint64 {
	if m != nil && m.AccConnId != nil {
		return *m.AccConnId
	}
	return 0
}

func (m *PB_ModMsgId) GetTmpAccConnId() uint64 {
	if m != nil && m.TmpAccConnId != nil {
		return *m.TmpAccConnId
	}
	return 0
}

type PB_SrvHead struct {
	Srvop            *uint32      `protobuf:"varint,1,req,name=srvop" json:"srvop,omitempty"`
	Flag             *uint32      `protobuf:"varint,2,opt,name=flag" json:"flag,omitempty"`
	Mmid             *PB_ModMsgId `protobuf:"bytes,3,opt,name=mmid" json:"mmid,omitempty"`
	FromDid          *int64       `protobuf:"varint,4,opt,name=from_did,json=fromDid" json:"from_did,omitempty"`
	FromPid          *int64       `protobuf:"varint,5,opt,name=from_pid,json=fromPid" json:"from_pid,omitempty"`
	ToDid            *int64       `protobuf:"varint,6,opt,name=to_did,json=toDid" json:"to_did,omitempty"`
	ToPid            *int64       `protobuf:"varint,7,opt,name=to_pid,json=toPid" json:"to_pid,omitempty"`
	ErrNo            *int32       `protobuf:"varint,8,opt,name=err_no,json=errNo,def=0" json:"err_no,omitempty"`
	Session          *string      `protobuf:"bytes,9,opt,name=session" json:"session,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PB_SrvHead) Reset()                    { *m = PB_SrvHead{} }
func (m *PB_SrvHead) String() string            { return proto.CompactTextString(m) }
func (*PB_SrvHead) ProtoMessage()               {}
func (*PB_SrvHead) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

const Default_PB_SrvHead_ErrNo int32 = 0

func (m *PB_SrvHead) GetSrvop() uint32 {
	if m != nil && m.Srvop != nil {
		return *m.Srvop
	}
	return 0
}

func (m *PB_SrvHead) GetFlag() uint32 {
	if m != nil && m.Flag != nil {
		return *m.Flag
	}
	return 0
}

func (m *PB_SrvHead) GetMmid() *PB_ModMsgId {
	if m != nil {
		return m.Mmid
	}
	return nil
}

func (m *PB_SrvHead) GetFromDid() int64 {
	if m != nil && m.FromDid != nil {
		return *m.FromDid
	}
	return 0
}

func (m *PB_SrvHead) GetFromPid() int64 {
	if m != nil && m.FromPid != nil {
		return *m.FromPid
	}
	return 0
}

func (m *PB_SrvHead) GetToDid() int64 {
	if m != nil && m.ToDid != nil {
		return *m.ToDid
	}
	return 0
}

func (m *PB_SrvHead) GetToPid() int64 {
	if m != nil && m.ToPid != nil {
		return *m.ToPid
	}
	return 0
}

func (m *PB_SrvHead) GetErrNo() int32 {
	if m != nil && m.ErrNo != nil {
		return *m.ErrNo
	}
	return Default_PB_SrvHead_ErrNo
}

func (m *PB_SrvHead) GetSession() string {
	if m != nil && m.Session != nil {
		return *m.Session
	}
	return ""
}

func init() {
	proto.RegisterType((*PB_ModMsgId)(nil), "com.sangfor.moa.protobuf.PB_ModMsgId")
	proto.RegisterType((*PB_SrvHead)(nil), "com.sangfor.moa.protobuf.PB_SrvHead")
}

func init() { proto.RegisterFile("srvhead.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 534 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x93, 0xcf, 0x6e, 0xd4, 0x30,
	0x10, 0x87, 0x95, 0x76, 0xd3, 0x3f, 0xde, 0x66, 0x4b, 0xdd, 0x16, 0x52, 0x28, 0x55, 0xb4, 0xa2,
	0x28, 0xa7, 0x08, 0x01, 0x17, 0xb8, 0x51, 0x7a, 0x60, 0x0f, 0x45, 0xab, 0xf0, 0x00, 0x51, 0x36,
	0x76, 0xd2, 0x88, 0xc4, 0x76, 0xc7, 0xee, 0x2e, 0x3c, 0x02, 0xaf, 0xcc, 0x09, 0xc5, 0xb3, 0x36,
	0xe1, 0xc0, 0xad, 0xfe, 0xe6, 0xcb, 0x74, 0xe6, 0xe7, 0x35, 0x89, 0x34, 0xac, 0xef, 0x79, 0xc9,
	0x32, 0x05, 0xd2, 0x48, 0x1a, 0x57, 0xb2, 0xcf, 0x74, 0x29, 0x9a, 0x5a, 0x42, 0xd6, 0xcb, 0x12,
	0xf1, 0xea, 0xb1, 0x9e, 0xff, 0x0e, 0xc9, 0x74, 0x79, 0x53, 0xdc, 0x49, 0x76, 0xa7, 0x9b, 0x05,
	0xa3, 0x73, 0x12, 0x55, 0x5d, 0xcb, 0x85, 0x29, 0x80, 0x3f, 0x14, 0x2d, 0x8b, 0x83, 0x24, 0x48,
	0x27, 0xf9, 0x14, 0x61, 0xce, 0x1f, 0x16, 0x8c, 0x5e, 0x91, 0x29, 0x6b, 0xb5, 0x72, 0xc6, 0x8e,
	0x35, 0x0e, 0x07, 0x84, 0xf5, 0xd7, 0xe4, 0x78, 0x23, 0xe1, 0x7b, 0xdd, 0xc9, 0x8d, 0x73, 0xf6,
	0xad, 0x13, 0x39, 0x8c, 0x5e, 0x4a, 0x9e, 0x68, 0x0e, 0x6b, 0x0e, 0x7d, 0xe9, 0x9b, 0xcd, 0xac,
	0x38, 0xf3, 0x1c, 0xcd, 0x39, 0x89, 0x84, 0x34, 0x6d, 0xfd, 0xd3, 0x69, 0x27, 0x38, 0x15, 0x42,
	0x3f, 0x55, 0xdd, 0x76, 0xdc, 0x19, 0x14, 0xa7, 0x1a, 0x90, 0xef, 0xa1, 0x61, 0x0d, 0xaa, 0x72,
	0xc6, 0x29, 0xf6, 0x40, 0x88, 0x4e, 0x42, 0x8e, 0xb8, 0x30, 0xe0, 0xff, 0xcd, 0x99, 0x55, 0x88,
	0x65, 0x68, 0x64, 0xe4, 0xd4, 0x2d, 0x31, 0xce, 0xe0, 0xdc, 0x8a, 0x27, 0xe3, 0x12, 0xfa, 0xaf,
	0xc8, 0xac, 0x37, 0x8f, 0x42, 0xf0, 0xce, 0xa9, 0x4f, 0xad, 0x7a, 0xb4, 0xa5, 0x68, 0x5d, 0x12,
	0xb2, 0xe1, 0x2b, 0x67, 0x3c, 0xb3, 0xc6, 0xc1, 0x86, 0xaf, 0x7c, 0x15, 0x78, 0xe3, 0xaa, 0x31,
	0x56, 0x81, 0x37, 0x3e, 0xed, 0x7b, 0x63, 0x94, 0x92, 0xe0, 0xef, 0xec, 0x02, 0xd3, 0x76, 0xd8,
	0xa7, 0x2d, 0x15, 0x18, 0x05, 0xf2, 0x87, 0xdf, 0xef, 0x39, 0xa6, 0xed, 0xb9, 0xef, 0x38, 0x90,
	0xf1, 0x7e, 0x2f, 0xb0, 0xa3, 0xc3, 0x7e, 0xb7, 0x8e, 0x37, 0xc3, 0xce, 0x4e, 0xbb, 0xc4, 0xdd,
	0xb6, 0xd4, 0xe7, 0xae, 0x38, 0xf4, 0xad, 0x9f, 0xee, 0x25, 0xe6, 0x8e, 0xd0, 0xa7, 0xda, 0x73,
	0xad, 0xcb, 0x86, 0xff, 0x33, 0xde, 0x15, 0xa6, 0x3a, 0x2e, 0xf9, 0xbb, 0x2e, 0xab, 0xaa, 0xa8,
	0xa4, 0x10, 0x83, 0xf7, 0x0e, 0xef, 0xba, 0xac, 0xaa, 0xcf, 0x52, 0x88, 0x05, 0xa3, 0xd7, 0xe4,
	0xd8, 0xf4, 0xaa, 0x18, 0x3b, 0xef, 0x71, 0x34, 0xd3, 0xab, 0x4f, 0x4e, 0x9b, 0xff, 0xda, 0x21,
	0x64, 0x79, 0x53, 0x7c, 0x83, 0xf5, 0x17, 0x5e, 0x32, 0x7a, 0x46, 0x42, 0x0d, 0x6b, 0xa9, 0xe2,
	0x20, 0xd9, 0x49, 0xa3, 0x1c, 0x0f, 0x94, 0x92, 0x49, 0xdd, 0x95, 0x8d, 0xfd, 0x99, 0x47, 0xb9,
	0xfd, 0x9b, 0x7e, 0x20, 0x93, 0xbe, 0x6f, 0x59, 0xbc, 0x9b, 0x04, 0xe9, 0xf4, 0xed, 0x75, 0xf6,
	0xbf, 0xe7, 0x95, 0x8d, 0x9e, 0x56, 0x6e, 0x3f, 0xa1, 0x17, 0xe4, 0xa0, 0x06, 0xd9, 0x17, 0xac,
	0x65, 0xf1, 0x24, 0x09, 0xd2, 0xdd, 0x7c, 0x7f, 0x38, 0xdf, 0x8e, 0x4a, 0xaa, 0x65, 0x71, 0xf8,
	0xb7, 0xb4, 0x6c, 0x19, 0x3d, 0x27, 0x7b, 0x46, 0xda, 0x6f, 0xf6, 0x6c, 0x21, 0x34, 0xf2, 0xd6,
	0x63, 0xb5, 0x7d, 0x60, 0x16, 0x0f, 0x76, 0x4c, 0xf6, 0x38, 0x40, 0x21, 0x64, 0x7c, 0x90, 0x04,
	0x69, 0xf8, 0x31, 0x78, 0x93, 0x87, 0x1c, 0xe0, 0xab, 0xa4, 0x31, 0xd9, 0xd7, 0x5c, 0xeb, 0x56,
	0x8a, 0xf8, 0x30, 0x09, 0xd2, 0xc3, 0xdc, 0x1d, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x71,
	0xc9, 0x65, 0x32, 0x04, 0x00, 0x00,
}
