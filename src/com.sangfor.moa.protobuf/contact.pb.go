// Code generated by protoc-gen-go. DO NOT EDIT.
// source: contact.proto

package com_sangfor_moa_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PB_PidType int32

const (
	PB_PidType_PID_PERSONAL     PB_PidType = 0
	PB_PidType_PID_PUBLIC       PB_PidType = 1
	PB_PidType_PID_ADMIN        PB_PidType = 2
	PB_PidType_PID_SUBSCRIPTION PB_PidType = 3
	PB_PidType_PID_SUBTABLE     PB_PidType = 4
)

var PB_PidType_name = map[int32]string{
	0: "PID_PERSONAL",
	1: "PID_PUBLIC",
	2: "PID_ADMIN",
	3: "PID_SUBSCRIPTION",
	4: "PID_SUBTABLE",
}
var PB_PidType_value = map[string]int32{
	"PID_PERSONAL":     0,
	"PID_PUBLIC":       1,
	"PID_ADMIN":        2,
	"PID_SUBSCRIPTION": 3,
	"PID_SUBTABLE":     4,
}

func (x PB_PidType) Enum() *PB_PidType {
	p := new(PB_PidType)
	*p = x
	return p
}
func (x PB_PidType) String() string {
	return proto.EnumName(PB_PidType_name, int32(x))
}
func (x *PB_PidType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PidType_value, data, "PB_PidType")
	if err != nil {
		return err
	}
	*x = PB_PidType(value)
	return nil
}
func (PB_PidType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type PB_Sex int32

const (
	PB_Sex_MALE   PB_Sex = 0
	PB_Sex_FEMALE PB_Sex = 1
)

var PB_Sex_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
}
var PB_Sex_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
}

func (x PB_Sex) Enum() *PB_Sex {
	p := new(PB_Sex)
	*p = x
	return p
}
func (x PB_Sex) String() string {
	return proto.EnumName(PB_Sex_name, int32(x))
}
func (x *PB_Sex) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_Sex_value, data, "PB_Sex")
	if err != nil {
		return err
	}
	*x = PB_Sex(value)
	return nil
}
func (PB_Sex) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type PB_PersonStatus int32

const (
	PB_PersonStatus_INIT   PB_PersonStatus = 0
	PB_PersonStatus_AUTHED PB_PersonStatus = 1
	PB_PersonStatus_ONWORK PB_PersonStatus = 2
	PB_PersonStatus_UNWORK PB_PersonStatus = 3
	PB_PersonStatus_LEAVE  PB_PersonStatus = 4
)

var PB_PersonStatus_name = map[int32]string{
	0: "INIT",
	1: "AUTHED",
	2: "ONWORK",
	3: "UNWORK",
	4: "LEAVE",
}
var PB_PersonStatus_value = map[string]int32{
	"INIT":   0,
	"AUTHED": 1,
	"ONWORK": 2,
	"UNWORK": 3,
	"LEAVE":  4,
}

func (x PB_PersonStatus) Enum() *PB_PersonStatus {
	p := new(PB_PersonStatus)
	*p = x
	return p
}
func (x PB_PersonStatus) String() string {
	return proto.EnumName(PB_PersonStatus_name, int32(x))
}
func (x *PB_PersonStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PersonStatus_value, data, "PB_PersonStatus")
	if err != nil {
		return err
	}
	*x = PB_PersonStatus(value)
	return nil
}
func (PB_PersonStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

// 用户控制类型
type PB_PersonContralType int32

const (
	PB_PersonContralType_PCT_PART PB_PersonContralType = 0
	PB_PersonContralType_PCT_ALL  PB_PersonContralType = 1
)

var PB_PersonContralType_name = map[int32]string{
	0: "PCT_PART",
	1: "PCT_ALL",
}
var PB_PersonContralType_value = map[string]int32{
	"PCT_PART": 0,
	"PCT_ALL":  1,
}

func (x PB_PersonContralType) Enum() *PB_PersonContralType {
	p := new(PB_PersonContralType)
	*p = x
	return p
}
func (x PB_PersonContralType) String() string {
	return proto.EnumName(PB_PersonContralType_name, int32(x))
}
func (x *PB_PersonContralType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PersonContralType_value, data, "PB_PersonContralType")
	if err != nil {
		return err
	}
	*x = PB_PersonContralType(value)
	return nil
}
func (PB_PersonContralType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

// 群组类型
type PB_GroupType int32

const (
	PB_GroupType_GT_CUSTOM      PB_GroupType = 0
	PB_GroupType_GT_OFFICIAL    PB_GroupType = 1
	PB_GroupType_GT_ORGAN       PB_GroupType = 2
	PB_GroupType_GT_CHAT        PB_GroupType = 3
	PB_GroupType_GT_JOB_RELATED PB_GroupType = 4
)

var PB_GroupType_name = map[int32]string{
	0: "GT_CUSTOM",
	1: "GT_OFFICIAL",
	2: "GT_ORGAN",
	3: "GT_CHAT",
	4: "GT_JOB_RELATED",
}
var PB_GroupType_value = map[string]int32{
	"GT_CUSTOM":      0,
	"GT_OFFICIAL":    1,
	"GT_ORGAN":       2,
	"GT_CHAT":        3,
	"GT_JOB_RELATED": 4,
}

func (x PB_GroupType) Enum() *PB_GroupType {
	p := new(PB_GroupType)
	*p = x
	return p
}
func (x PB_GroupType) String() string {
	return proto.EnumName(PB_GroupType_name, int32(x))
}
func (x *PB_GroupType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_GroupType_value, data, "PB_GroupType")
	if err != nil {
		return err
	}
	*x = PB_GroupType(value)
	return nil
}
func (PB_GroupType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

// 群组控制类型
type PB_GroupContralType int32

const (
	PB_GroupContralType_GCT_PART PB_GroupContralType = 0
	PB_GroupContralType_GCT_ALL  PB_GroupContralType = 1
)

var PB_GroupContralType_name = map[int32]string{
	0: "GCT_PART",
	1: "GCT_ALL",
}
var PB_GroupContralType_value = map[string]int32{
	"GCT_PART": 0,
	"GCT_ALL":  1,
}

func (x PB_GroupContralType) Enum() *PB_GroupContralType {
	p := new(PB_GroupContralType)
	*p = x
	return p
}
func (x PB_GroupContralType) String() string {
	return proto.EnumName(PB_GroupContralType_name, int32(x))
}
func (x *PB_GroupContralType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_GroupContralType_value, data, "PB_GroupContralType")
	if err != nil {
		return err
	}
	*x = PB_GroupContralType(value)
	return nil
}
func (PB_GroupContralType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

// 群组消息的通知状态
type PB_GroupNotifyType int32

const (
	PB_GroupNotifyType_GNT_PUSH    PB_GroupNotifyType = 0
	PB_GroupNotifyType_GNT_NO_PUSH PB_GroupNotifyType = 1
)

var PB_GroupNotifyType_name = map[int32]string{
	0: "GNT_PUSH",
	1: "GNT_NO_PUSH",
}
var PB_GroupNotifyType_value = map[string]int32{
	"GNT_PUSH":    0,
	"GNT_NO_PUSH": 1,
}

func (x PB_GroupNotifyType) Enum() *PB_GroupNotifyType {
	p := new(PB_GroupNotifyType)
	*p = x
	return p
}
func (x PB_GroupNotifyType) String() string {
	return proto.EnumName(PB_GroupNotifyType_name, int32(x))
}
func (x *PB_GroupNotifyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_GroupNotifyType_value, data, "PB_GroupNotifyType")
	if err != nil {
		return err
	}
	*x = PB_GroupNotifyType(value)
	return nil
}
func (PB_GroupNotifyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

// 群组控制类型
type PB_PersonGroupInfoContralType int32

const (
	PB_PersonGroupInfoContralType_PGICT_PART PB_PersonGroupInfoContralType = 0
	PB_PersonGroupInfoContralType_PGICT_ALL  PB_PersonGroupInfoContralType = 1
)

var PB_PersonGroupInfoContralType_name = map[int32]string{
	0: "PGICT_PART",
	1: "PGICT_ALL",
}
var PB_PersonGroupInfoContralType_value = map[string]int32{
	"PGICT_PART": 0,
	"PGICT_ALL":  1,
}

func (x PB_PersonGroupInfoContralType) Enum() *PB_PersonGroupInfoContralType {
	p := new(PB_PersonGroupInfoContralType)
	*p = x
	return p
}
func (x PB_PersonGroupInfoContralType) String() string {
	return proto.EnumName(PB_PersonGroupInfoContralType_name, int32(x))
}
func (x *PB_PersonGroupInfoContralType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PersonGroupInfoContralType_value, data, "PB_PersonGroupInfoContralType")
	if err != nil {
		return err
	}
	*x = PB_PersonGroupInfoContralType(value)
	return nil
}
func (PB_PersonGroupInfoContralType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{7}
}

// 消息通知类型, 添加一个新的枚举主要是为了后续替换群组的gnt，统一用这一个状态，而且群组gnt后续换成int的类型传递这样
type PB_MessageNotifyType int32

const (
	PB_MessageNotifyType_MNT_PUSH    PB_MessageNotifyType = 0
	PB_MessageNotifyType_MNT_NO_PUSH PB_MessageNotifyType = 1
)

var PB_MessageNotifyType_name = map[int32]string{
	0: "MNT_PUSH",
	1: "MNT_NO_PUSH",
}
var PB_MessageNotifyType_value = map[string]int32{
	"MNT_PUSH":    0,
	"MNT_NO_PUSH": 1,
}

func (x PB_MessageNotifyType) Enum() *PB_MessageNotifyType {
	p := new(PB_MessageNotifyType)
	*p = x
	return p
}
func (x PB_MessageNotifyType) String() string {
	return proto.EnumName(PB_MessageNotifyType_name, int32(x))
}
func (x *PB_MessageNotifyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_MessageNotifyType_value, data, "PB_MessageNotifyType")
	if err != nil {
		return err
	}
	*x = PB_MessageNotifyType(value)
	return nil
}
func (PB_MessageNotifyType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

type PB_PersonPersonInfoContralType int32

const (
	PB_PersonPersonInfoContralType_PPICT_PART PB_PersonPersonInfoContralType = 0
	PB_PersonPersonInfoContralType_PPICT_ALL  PB_PersonPersonInfoContralType = 1
)

var PB_PersonPersonInfoContralType_name = map[int32]string{
	0: "PPICT_PART",
	1: "PPICT_ALL",
}
var PB_PersonPersonInfoContralType_value = map[string]int32{
	"PPICT_PART": 0,
	"PPICT_ALL":  1,
}

func (x PB_PersonPersonInfoContralType) Enum() *PB_PersonPersonInfoContralType {
	p := new(PB_PersonPersonInfoContralType)
	*p = x
	return p
}
func (x PB_PersonPersonInfoContralType) String() string {
	return proto.EnumName(PB_PersonPersonInfoContralType_name, int32(x))
}
func (x *PB_PersonPersonInfoContralType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PersonPersonInfoContralType_value, data, "PB_PersonPersonInfoContralType")
	if err != nil {
		return err
	}
	*x = PB_PersonPersonInfoContralType(value)
	return nil
}
func (PB_PersonPersonInfoContralType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{9}
}

type PB_DomainSetContralType int32

const (
	PB_DomainSetContralType_PDSCT_PART PB_DomainSetContralType = 0
	PB_DomainSetContralType_PDSCT_ALL  PB_DomainSetContralType = 1
)

var PB_DomainSetContralType_name = map[int32]string{
	0: "PDSCT_PART",
	1: "PDSCT_ALL",
}
var PB_DomainSetContralType_value = map[string]int32{
	"PDSCT_PART": 0,
	"PDSCT_ALL":  1,
}

func (x PB_DomainSetContralType) Enum() *PB_DomainSetContralType {
	p := new(PB_DomainSetContralType)
	*p = x
	return p
}
func (x PB_DomainSetContralType) String() string {
	return proto.EnumName(PB_DomainSetContralType_name, int32(x))
}
func (x *PB_DomainSetContralType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_DomainSetContralType_value, data, "PB_DomainSetContralType")
	if err != nil {
		return err
	}
	*x = PB_DomainSetContralType(value)
	return nil
}
func (PB_DomainSetContralType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

type PB_PersonDataStatusType int32

const (
	PB_PersonDataStatusType_PDST_BASIC         PB_PersonDataStatusType = 0
	PB_PersonDataStatusType_PDST_EXTEND        PB_PersonDataStatusType = 1
	PB_PersonDataStatusType_PDST_CUSTOM_BASIC  PB_PersonDataStatusType = 2
	PB_PersonDataStatusType_PDST_CUSTOM_EXTEND PB_PersonDataStatusType = 3
)

var PB_PersonDataStatusType_name = map[int32]string{
	0: "PDST_BASIC",
	1: "PDST_EXTEND",
	2: "PDST_CUSTOM_BASIC",
	3: "PDST_CUSTOM_EXTEND",
}
var PB_PersonDataStatusType_value = map[string]int32{
	"PDST_BASIC":         0,
	"PDST_EXTEND":        1,
	"PDST_CUSTOM_BASIC":  2,
	"PDST_CUSTOM_EXTEND": 3,
}

func (x PB_PersonDataStatusType) Enum() *PB_PersonDataStatusType {
	p := new(PB_PersonDataStatusType)
	*p = x
	return p
}
func (x PB_PersonDataStatusType) String() string {
	return proto.EnumName(PB_PersonDataStatusType_name, int32(x))
}
func (x *PB_PersonDataStatusType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PersonDataStatusType_value, data, "PB_PersonDataStatusType")
	if err != nil {
		return err
	}
	*x = PB_PersonDataStatusType(value)
	return nil
}
func (PB_PersonDataStatusType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

// 座机是WORK,其他都是手机
type PB_PhoneNumber_PhoneType int32

const (
	PB_PhoneNumber_MOBILE PB_PhoneNumber_PhoneType = 0
	PB_PhoneNumber_HOME   PB_PhoneNumber_PhoneType = 1
	PB_PhoneNumber_WORK   PB_PhoneNumber_PhoneType = 2
	PB_PhoneNumber_OFTEN  PB_PhoneNumber_PhoneType = 3
)

var PB_PhoneNumber_PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
	3: "OFTEN",
}
var PB_PhoneNumber_PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
	"OFTEN":  3,
}

func (x PB_PhoneNumber_PhoneType) Enum() *PB_PhoneNumber_PhoneType {
	p := new(PB_PhoneNumber_PhoneType)
	*p = x
	return p
}
func (x PB_PhoneNumber_PhoneType) String() string {
	return proto.EnumName(PB_PhoneNumber_PhoneType_name, int32(x))
}
func (x *PB_PhoneNumber_PhoneType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_PhoneNumber_PhoneType_value, data, "PB_PhoneNumber_PhoneType")
	if err != nil {
		return err
	}
	*x = PB_PhoneNumber_PhoneType(value)
	return nil
}
func (PB_PhoneNumber_PhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0, 0} }

type PB_MailInfo_MailType int32

const (
	PB_MailInfo_OFTEN  PB_MailInfo_MailType = 0
	PB_MailInfo_WORK   PB_MailInfo_MailType = 1
	PB_MailInfo_PERSON PB_MailInfo_MailType = 2
)

var PB_MailInfo_MailType_name = map[int32]string{
	0: "OFTEN",
	1: "WORK",
	2: "PERSON",
}
var PB_MailInfo_MailType_value = map[string]int32{
	"OFTEN":  0,
	"WORK":   1,
	"PERSON": 2,
}

func (x PB_MailInfo_MailType) Enum() *PB_MailInfo_MailType {
	p := new(PB_MailInfo_MailType)
	*p = x
	return p
}
func (x PB_MailInfo_MailType) String() string {
	return proto.EnumName(PB_MailInfo_MailType_name, int32(x))
}
func (x *PB_MailInfo_MailType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PB_MailInfo_MailType_value, data, "PB_MailInfo_MailType")
	if err != nil {
		return err
	}
	*x = PB_MailInfo_MailType(value)
	return nil
}
func (PB_MailInfo_MailType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1, 0} }

type PB_PhoneNumber struct {
	Type             *PB_PhoneNumber_PhoneType `protobuf:"varint,1,opt,name=type,enum=com.sangfor.moa.protobuf.PB_PhoneNumber_PhoneType,def=0" json:"type,omitempty"`
	Number           *string                   `protobuf:"bytes,2,req,name=number" json:"number,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *PB_PhoneNumber) Reset()                    { *m = PB_PhoneNumber{} }
func (m *PB_PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*PB_PhoneNumber) ProtoMessage()               {}
func (*PB_PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

const Default_PB_PhoneNumber_Type PB_PhoneNumber_PhoneType = PB_PhoneNumber_MOBILE

func (m *PB_PhoneNumber) GetType() PB_PhoneNumber_PhoneType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_PB_PhoneNumber_Type
}

func (m *PB_PhoneNumber) GetNumber() string {
	if m != nil && m.Number != nil {
		return *m.Number
	}
	return ""
}

type PB_MailInfo struct {
	Type             *PB_MailInfo_MailType `protobuf:"varint,1,opt,name=type,enum=com.sangfor.moa.protobuf.PB_MailInfo_MailType,def=1" json:"type,omitempty"`
	Mail             *string               `protobuf:"bytes,2,req,name=mail" json:"mail,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *PB_MailInfo) Reset()                    { *m = PB_MailInfo{} }
func (m *PB_MailInfo) String() string            { return proto.CompactTextString(m) }
func (*PB_MailInfo) ProtoMessage()               {}
func (*PB_MailInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

const Default_PB_MailInfo_Type PB_MailInfo_MailType = PB_MailInfo_WORK

func (m *PB_MailInfo) GetType() PB_MailInfo_MailType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_PB_MailInfo_Type
}

func (m *PB_MailInfo) GetMail() string {
	if m != nil && m.Mail != nil {
		return *m.Mail
	}
	return ""
}

type PB_PersonExtendData struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Data             []byte  `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_PersonExtendData) Reset()                    { *m = PB_PersonExtendData{} }
func (m *PB_PersonExtendData) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonExtendData) ProtoMessage()               {}
func (*PB_PersonExtendData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *PB_PersonExtendData) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PB_PersonExtendData) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type PB_Department struct {
	Gid              *int64  `protobuf:"varint,1,req,name=gid" json:"gid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_Department) Reset()                    { *m = PB_Department{} }
func (m *PB_Department) String() string            { return proto.CompactTextString(m) }
func (*PB_Department) ProtoMessage()               {}
func (*PB_Department) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *PB_Department) GetGid() int64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PB_Department) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 联系人
type PB_Person struct {
	Pid                *int64                 `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	Ptype              *PB_PidType            `protobuf:"varint,2,opt,name=ptype,enum=com.sangfor.moa.protobuf.PB_PidType,def=0" json:"ptype,omitempty"`
	Name               *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	LoginAccount       *string                `protobuf:"bytes,4,opt,name=login_account,json=loginAccount" json:"login_account,omitempty"`
	Sex                *PB_Sex                `protobuf:"varint,5,opt,name=sex,enum=com.sangfor.moa.protobuf.PB_Sex" json:"sex,omitempty"`
	Photo              *PB_Attachment         `protobuf:"bytes,6,opt,name=photo" json:"photo,omitempty"`
	Position           *string                `protobuf:"bytes,7,opt,name=position" json:"position,omitempty"`
	Phones             []*PB_PhoneNumber      `protobuf:"bytes,8,rep,name=phones" json:"phones,omitempty"`
	Mails              []*PB_MailInfo         `protobuf:"bytes,9,rep,name=mails" json:"mails,omitempty"`
	SaWord             []string               `protobuf:"bytes,10,rep,name=sa_word,json=saWord" json:"sa_word,omitempty"`
	Status             *PB_PersonStatus       `protobuf:"varint,11,opt,name=status,enum=com.sangfor.moa.protobuf.PB_PersonStatus" json:"status,omitempty"`
	ChangeStatusReason *string                `protobuf:"bytes,12,opt,name=change_status_reason,json=changeStatusReason" json:"change_status_reason,omitempty"`
	Address            *string                `protobuf:"bytes,13,opt,name=address" json:"address,omitempty"`
	CreateTime         *int64                 `protobuf:"varint,14,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ActivateTime       *int64                 `protobuf:"varint,15,opt,name=activate_time,json=activateTime" json:"activate_time,omitempty"`
	EntryTime          *int64                 `protobuf:"varint,16,opt,name=entry_time,json=entryTime" json:"entry_time,omitempty"`
	Departments        []*PB_Department       `protobuf:"bytes,17,rep,name=departments" json:"departments,omitempty"`
	LeaveTime          *int64                 `protobuf:"varint,18,opt,name=leave_time,json=leaveTime" json:"leave_time,omitempty"`
	AutoWaStatus       *int32                 `protobuf:"varint,19,opt,name=auto_wa_status,json=autoWaStatus" json:"auto_wa_status,omitempty"`
	EmployeeId         *string                `protobuf:"bytes,20,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	WebNotifyType      *int32                 `protobuf:"varint,21,opt,name=web_notify_type,json=webNotifyType" json:"web_notify_type,omitempty"`
	HideAccount        *int32                 `protobuf:"varint,22,opt,name=hide_account,json=hideAccount" json:"hide_account,omitempty"`
	Udversion          *uint32                `protobuf:"varint,41,opt,name=udversion" json:"udversion,omitempty"`
	Extends            []*PB_PersonExtendData `protobuf:"bytes,43,rep,name=extends" json:"extends,omitempty"`
	Password           []byte                 `protobuf:"bytes,46,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized   []byte                 `json:"-"`
}

func (m *PB_Person) Reset()                    { *m = PB_Person{} }
func (m *PB_Person) String() string            { return proto.CompactTextString(m) }
func (*PB_Person) ProtoMessage()               {}
func (*PB_Person) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

const Default_PB_Person_Ptype PB_PidType = PB_PidType_PID_PERSONAL

func (m *PB_Person) GetPid() int64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *PB_Person) GetPtype() PB_PidType {
	if m != nil && m.Ptype != nil {
		return *m.Ptype
	}
	return Default_PB_Person_Ptype
}

func (m *PB_Person) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PB_Person) GetLoginAccount() string {
	if m != nil && m.LoginAccount != nil {
		return *m.LoginAccount
	}
	return ""
}

func (m *PB_Person) GetSex() PB_Sex {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return PB_Sex_MALE
}

func (m *PB_Person) GetPhoto() *PB_Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *PB_Person) GetPosition() string {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return ""
}

func (m *PB_Person) GetPhones() []*PB_PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *PB_Person) GetMails() []*PB_MailInfo {
	if m != nil {
		return m.Mails
	}
	return nil
}

func (m *PB_Person) GetSaWord() []string {
	if m != nil {
		return m.SaWord
	}
	return nil
}

func (m *PB_Person) GetStatus() PB_PersonStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PB_PersonStatus_INIT
}

func (m *PB_Person) GetChangeStatusReason() string {
	if m != nil && m.ChangeStatusReason != nil {
		return *m.ChangeStatusReason
	}
	return ""
}

func (m *PB_Person) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *PB_Person) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *PB_Person) GetActivateTime() int64 {
	if m != nil && m.ActivateTime != nil {
		return *m.ActivateTime
	}
	return 0
}

func (m *PB_Person) GetEntryTime() int64 {
	if m != nil && m.EntryTime != nil {
		return *m.EntryTime
	}
	return 0
}

func (m *PB_Person) GetDepartments() []*PB_Department {
	if m != nil {
		return m.Departments
	}
	return nil
}

func (m *PB_Person) GetLeaveTime() int64 {
	if m != nil && m.LeaveTime != nil {
		return *m.LeaveTime
	}
	return 0
}

func (m *PB_Person) GetAutoWaStatus() int32 {
	if m != nil && m.AutoWaStatus != nil {
		return *m.AutoWaStatus
	}
	return 0
}

func (m *PB_Person) GetEmployeeId() string {
	if m != nil && m.EmployeeId != nil {
		return *m.EmployeeId
	}
	return ""
}

func (m *PB_Person) GetWebNotifyType() int32 {
	if m != nil && m.WebNotifyType != nil {
		return *m.WebNotifyType
	}
	return 0
}

func (m *PB_Person) GetHideAccount() int32 {
	if m != nil && m.HideAccount != nil {
		return *m.HideAccount
	}
	return 0
}

func (m *PB_Person) GetUdversion() uint32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

func (m *PB_Person) GetExtends() []*PB_PersonExtendData {
	if m != nil {
		return m.Extends
	}
	return nil
}

func (m *PB_Person) GetPassword() []byte {
	if m != nil {
		return m.Password
	}
	return nil
}

// 用户控制结构， tag 设置且不为0的时候生效，PCT_ALL的时候设置为不返回
// PCT_PART的时候设置为返回，群组控制同理
type PB_PersonContral struct {
	Op                 *PB_PersonContralType `protobuf:"varint,1,req,name=op,enum=com.sangfor.moa.protobuf.PB_PersonContralType" json:"op,omitempty"`
	Ptype              *bool                 `protobuf:"varint,2,opt,name=ptype" json:"ptype,omitempty"`
	Name               *bool                 `protobuf:"varint,3,opt,name=name" json:"name,omitempty"`
	LoginAccount       *bool                 `protobuf:"varint,4,opt,name=login_account,json=loginAccount" json:"login_account,omitempty"`
	Sex                *bool                 `protobuf:"varint,5,opt,name=sex" json:"sex,omitempty"`
	Photo              *bool                 `protobuf:"varint,6,opt,name=photo" json:"photo,omitempty"`
	Position           *bool                 `protobuf:"varint,7,opt,name=position" json:"position,omitempty"`
	Phones             *bool                 `protobuf:"varint,8,opt,name=phones" json:"phones,omitempty"`
	Mails              *bool                 `protobuf:"varint,9,opt,name=mails" json:"mails,omitempty"`
	SaWord             *bool                 `protobuf:"varint,10,opt,name=sa_word,json=saWord" json:"sa_word,omitempty"`
	Status             *bool                 `protobuf:"varint,11,opt,name=status" json:"status,omitempty"`
	ChangeStatusReason *bool                 `protobuf:"varint,12,opt,name=change_status_reason,json=changeStatusReason" json:"change_status_reason,omitempty"`
	Address            *bool                 `protobuf:"varint,13,opt,name=address" json:"address,omitempty"`
	CreateTime         *bool                 `protobuf:"varint,14,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	ActivateTime       *bool                 `protobuf:"varint,15,opt,name=activate_time,json=activateTime" json:"activate_time,omitempty"`
	EntryTime          *bool                 `protobuf:"varint,16,opt,name=entry_time,json=entryTime" json:"entry_time,omitempty"`
	Departments        *bool                 `protobuf:"varint,17,opt,name=departments" json:"departments,omitempty"`
	LeaveTime          *bool                 `protobuf:"varint,18,opt,name=leave_time,json=leaveTime" json:"leave_time,omitempty"`
	AutoWaStatus       *bool                 `protobuf:"varint,19,opt,name=auto_wa_status,json=autoWaStatus" json:"auto_wa_status,omitempty"`
	EmployeeId         *bool                 `protobuf:"varint,20,opt,name=employee_id,json=employeeId" json:"employee_id,omitempty"`
	WebNotifyType      *bool                 `protobuf:"varint,21,opt,name=web_notify_type,json=webNotifyType" json:"web_notify_type,omitempty"`
	HideAccount        *bool                 `protobuf:"varint,22,opt,name=hide_account,json=hideAccount" json:"hide_account,omitempty"`
	Udversion          *bool                 `protobuf:"varint,41,opt,name=udversion" json:"udversion,omitempty"`
	// 	optional bool did = 42;
	Extends          *bool  `protobuf:"varint,43,opt,name=extends" json:"extends,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_PersonContral) Reset()                    { *m = PB_PersonContral{} }
func (m *PB_PersonContral) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonContral) ProtoMessage()               {}
func (*PB_PersonContral) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *PB_PersonContral) GetOp() PB_PersonContralType {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return PB_PersonContralType_PCT_PART
}

func (m *PB_PersonContral) GetPtype() bool {
	if m != nil && m.Ptype != nil {
		return *m.Ptype
	}
	return false
}

func (m *PB_PersonContral) GetName() bool {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return false
}

func (m *PB_PersonContral) GetLoginAccount() bool {
	if m != nil && m.LoginAccount != nil {
		return *m.LoginAccount
	}
	return false
}

func (m *PB_PersonContral) GetSex() bool {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return false
}

func (m *PB_PersonContral) GetPhoto() bool {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return false
}

func (m *PB_PersonContral) GetPosition() bool {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return false
}

func (m *PB_PersonContral) GetPhones() bool {
	if m != nil && m.Phones != nil {
		return *m.Phones
	}
	return false
}

func (m *PB_PersonContral) GetMails() bool {
	if m != nil && m.Mails != nil {
		return *m.Mails
	}
	return false
}

func (m *PB_PersonContral) GetSaWord() bool {
	if m != nil && m.SaWord != nil {
		return *m.SaWord
	}
	return false
}

func (m *PB_PersonContral) GetStatus() bool {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return false
}

func (m *PB_PersonContral) GetChangeStatusReason() bool {
	if m != nil && m.ChangeStatusReason != nil {
		return *m.ChangeStatusReason
	}
	return false
}

func (m *PB_PersonContral) GetAddress() bool {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return false
}

func (m *PB_PersonContral) GetCreateTime() bool {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return false
}

func (m *PB_PersonContral) GetActivateTime() bool {
	if m != nil && m.ActivateTime != nil {
		return *m.ActivateTime
	}
	return false
}

func (m *PB_PersonContral) GetEntryTime() bool {
	if m != nil && m.EntryTime != nil {
		return *m.EntryTime
	}
	return false
}

func (m *PB_PersonContral) GetDepartments() bool {
	if m != nil && m.Departments != nil {
		return *m.Departments
	}
	return false
}

func (m *PB_PersonContral) GetLeaveTime() bool {
	if m != nil && m.LeaveTime != nil {
		return *m.LeaveTime
	}
	return false
}

func (m *PB_PersonContral) GetAutoWaStatus() bool {
	if m != nil && m.AutoWaStatus != nil {
		return *m.AutoWaStatus
	}
	return false
}

func (m *PB_PersonContral) GetEmployeeId() bool {
	if m != nil && m.EmployeeId != nil {
		return *m.EmployeeId
	}
	return false
}

func (m *PB_PersonContral) GetWebNotifyType() bool {
	if m != nil && m.WebNotifyType != nil {
		return *m.WebNotifyType
	}
	return false
}

func (m *PB_PersonContral) GetHideAccount() bool {
	if m != nil && m.HideAccount != nil {
		return *m.HideAccount
	}
	return false
}

func (m *PB_PersonContral) GetUdversion() bool {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return false
}

func (m *PB_PersonContral) GetExtends() bool {
	if m != nil && m.Extends != nil {
		return *m.Extends
	}
	return false
}

// 群组结构
type PB_Group struct {
	Gid           *int64         `protobuf:"varint,1,req,name=gid" json:"gid,omitempty"`
	Gtype         *PB_GroupType  `protobuf:"varint,2,opt,name=gtype,enum=com.sangfor.moa.protobuf.PB_GroupType,def=0" json:"gtype,omitempty"`
	Name          *string        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	OwnerPid      *int64         `protobuf:"varint,4,opt,name=owner_pid,json=ownerPid" json:"owner_pid,omitempty"`
	Photo         *PB_Attachment `protobuf:"bytes,5,opt,name=photo" json:"photo,omitempty"`
	CreateTime    *int64         `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Address       *string        `protobuf:"bytes,7,opt,name=address" json:"address,omitempty"`
	DepartmentGid *int64         `protobuf:"varint,8,opt,name=department_gid,json=departmentGid" json:"department_gid,omitempty"`
	PersonCnt     *int64         `protobuf:"varint,9,opt,name=person_cnt,json=personCnt" json:"person_cnt,omitempty"`
	GroupCnt      *int64         `protobuf:"varint,10,opt,name=group_cnt,json=groupCnt" json:"group_cnt,omitempty"`
	RelatedInfo   *string        `protobuf:"bytes,11,opt,name=related_info,json=relatedInfo" json:"related_info,omitempty"`
	//  预留20个字段供后续扩展字段插入
	Udversion        *uint32 `protobuf:"varint,41,opt,name=udversion" json:"udversion,omitempty"`
	Pids             []int64 `protobuf:"varint,43,rep,name=pids" json:"pids,omitempty"`
	Gids             []int64 `protobuf:"varint,44,rep,name=gids" json:"gids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_Group) Reset()                    { *m = PB_Group{} }
func (m *PB_Group) String() string            { return proto.CompactTextString(m) }
func (*PB_Group) ProtoMessage()               {}
func (*PB_Group) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

const Default_PB_Group_Gtype PB_GroupType = PB_GroupType_GT_CUSTOM

func (m *PB_Group) GetGid() int64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PB_Group) GetGtype() PB_GroupType {
	if m != nil && m.Gtype != nil {
		return *m.Gtype
	}
	return Default_PB_Group_Gtype
}

func (m *PB_Group) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PB_Group) GetOwnerPid() int64 {
	if m != nil && m.OwnerPid != nil {
		return *m.OwnerPid
	}
	return 0
}

func (m *PB_Group) GetPhoto() *PB_Attachment {
	if m != nil {
		return m.Photo
	}
	return nil
}

func (m *PB_Group) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *PB_Group) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *PB_Group) GetDepartmentGid() int64 {
	if m != nil && m.DepartmentGid != nil {
		return *m.DepartmentGid
	}
	return 0
}

func (m *PB_Group) GetPersonCnt() int64 {
	if m != nil && m.PersonCnt != nil {
		return *m.PersonCnt
	}
	return 0
}

func (m *PB_Group) GetGroupCnt() int64 {
	if m != nil && m.GroupCnt != nil {
		return *m.GroupCnt
	}
	return 0
}

func (m *PB_Group) GetRelatedInfo() string {
	if m != nil && m.RelatedInfo != nil {
		return *m.RelatedInfo
	}
	return ""
}

func (m *PB_Group) GetUdversion() uint32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

func (m *PB_Group) GetPids() []int64 {
	if m != nil {
		return m.Pids
	}
	return nil
}

func (m *PB_Group) GetGids() []int64 {
	if m != nil {
		return m.Gids
	}
	return nil
}

//  群组控制结构
type PB_GroupContral struct {
	Op            *PB_GroupContralType `protobuf:"varint,1,req,name=op,enum=com.sangfor.moa.protobuf.PB_GroupContralType" json:"op,omitempty"`
	Gtype         *bool                `protobuf:"varint,2,opt,name=gtype" json:"gtype,omitempty"`
	Name          *bool                `protobuf:"varint,3,opt,name=name" json:"name,omitempty"`
	OwnerPid      *bool                `protobuf:"varint,4,opt,name=owner_pid,json=ownerPid" json:"owner_pid,omitempty"`
	Photo         *bool                `protobuf:"varint,5,opt,name=photo" json:"photo,omitempty"`
	CreateTime    *bool                `protobuf:"varint,6,opt,name=create_time,json=createTime" json:"create_time,omitempty"`
	Address       *bool                `protobuf:"varint,7,opt,name=address" json:"address,omitempty"`
	DepartmentGid *bool                `protobuf:"varint,8,opt,name=department_gid,json=departmentGid" json:"department_gid,omitempty"`
	PersonCnt     *bool                `protobuf:"varint,9,opt,name=person_cnt,json=personCnt" json:"person_cnt,omitempty"`
	GroupCnt      *bool                `protobuf:"varint,10,opt,name=group_cnt,json=groupCnt" json:"group_cnt,omitempty"`
	RelatedInfo   *bool                `protobuf:"varint,11,opt,name=related_info,json=relatedInfo" json:"related_info,omitempty"`
	Udversion     *bool                `protobuf:"varint,41,opt,name=udversion" json:"udversion,omitempty"`
	// 	optional bool did = 42;
	Pids             *bool  `protobuf:"varint,43,opt,name=pids" json:"pids,omitempty"`
	Gids             *bool  `protobuf:"varint,44,opt,name=gids" json:"gids,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_GroupContral) Reset()                    { *m = PB_GroupContral{} }
func (m *PB_GroupContral) String() string            { return proto.CompactTextString(m) }
func (*PB_GroupContral) ProtoMessage()               {}
func (*PB_GroupContral) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *PB_GroupContral) GetOp() PB_GroupContralType {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return PB_GroupContralType_GCT_PART
}

func (m *PB_GroupContral) GetGtype() bool {
	if m != nil && m.Gtype != nil {
		return *m.Gtype
	}
	return false
}

func (m *PB_GroupContral) GetName() bool {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return false
}

func (m *PB_GroupContral) GetOwnerPid() bool {
	if m != nil && m.OwnerPid != nil {
		return *m.OwnerPid
	}
	return false
}

func (m *PB_GroupContral) GetPhoto() bool {
	if m != nil && m.Photo != nil {
		return *m.Photo
	}
	return false
}

func (m *PB_GroupContral) GetCreateTime() bool {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return false
}

func (m *PB_GroupContral) GetAddress() bool {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return false
}

func (m *PB_GroupContral) GetDepartmentGid() bool {
	if m != nil && m.DepartmentGid != nil {
		return *m.DepartmentGid
	}
	return false
}

func (m *PB_GroupContral) GetPersonCnt() bool {
	if m != nil && m.PersonCnt != nil {
		return *m.PersonCnt
	}
	return false
}

func (m *PB_GroupContral) GetGroupCnt() bool {
	if m != nil && m.GroupCnt != nil {
		return *m.GroupCnt
	}
	return false
}

func (m *PB_GroupContral) GetRelatedInfo() bool {
	if m != nil && m.RelatedInfo != nil {
		return *m.RelatedInfo
	}
	return false
}

func (m *PB_GroupContral) GetUdversion() bool {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return false
}

func (m *PB_GroupContral) GetPids() bool {
	if m != nil && m.Pids != nil {
		return *m.Pids
	}
	return false
}

func (m *PB_GroupContral) GetGids() bool {
	if m != nil && m.Gids != nil {
		return *m.Gids
	}
	return false
}

// person 和 group 的公有属性
type PB_PersonGroupInfo struct {
	Pid              *int64              `protobuf:"varint,1,req,name=pid" json:"pid,omitempty"`
	Gid              *int64              `protobuf:"varint,2,req,name=gid" json:"gid,omitempty"`
	Gnt              *PB_GroupNotifyType `protobuf:"varint,3,opt,name=gnt,enum=com.sangfor.moa.protobuf.PB_GroupNotifyType" json:"gnt,omitempty"`
	JoinTime         *int64              `protobuf:"varint,4,opt,name=join_time,json=joinTime" json:"join_time,omitempty"`
	Udversion        *int32              `protobuf:"varint,20,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PB_PersonGroupInfo) Reset()                    { *m = PB_PersonGroupInfo{} }
func (m *PB_PersonGroupInfo) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonGroupInfo) ProtoMessage()               {}
func (*PB_PersonGroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *PB_PersonGroupInfo) GetPid() int64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *PB_PersonGroupInfo) GetGid() int64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PB_PersonGroupInfo) GetGnt() PB_GroupNotifyType {
	if m != nil && m.Gnt != nil {
		return *m.Gnt
	}
	return PB_GroupNotifyType_GNT_PUSH
}

func (m *PB_PersonGroupInfo) GetJoinTime() int64 {
	if m != nil && m.JoinTime != nil {
		return *m.JoinTime
	}
	return 0
}

func (m *PB_PersonGroupInfo) GetUdversion() int32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

type PB_PersonGroupInfoContral struct {
	Op               *PB_PersonGroupInfoContralType `protobuf:"varint,1,req,name=op,enum=com.sangfor.moa.protobuf.PB_PersonGroupInfoContralType" json:"op,omitempty"`
	Gnt              *bool                          `protobuf:"varint,3,opt,name=gnt" json:"gnt,omitempty"`
	JoinTime         *bool                          `protobuf:"varint,4,opt,name=join_time,json=joinTime" json:"join_time,omitempty"`
	Udversion        *bool                          `protobuf:"varint,20,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *PB_PersonGroupInfoContral) Reset()                    { *m = PB_PersonGroupInfoContral{} }
func (m *PB_PersonGroupInfoContral) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonGroupInfoContral) ProtoMessage()               {}
func (*PB_PersonGroupInfoContral) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *PB_PersonGroupInfoContral) GetOp() PB_PersonGroupInfoContralType {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return PB_PersonGroupInfoContralType_PGICT_PART
}

func (m *PB_PersonGroupInfoContral) GetGnt() bool {
	if m != nil && m.Gnt != nil {
		return *m.Gnt
	}
	return false
}

func (m *PB_PersonGroupInfoContral) GetJoinTime() bool {
	if m != nil && m.JoinTime != nil {
		return *m.JoinTime
	}
	return false
}

func (m *PB_PersonGroupInfoContral) GetUdversion() bool {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return false
}

// 没有这个信息的时候默认为MNT_PUSH
type PB_PersonPersonInfo struct {
	Pid              *int64 `protobuf:"varint,1,opt,name=pid" json:"pid,omitempty"`
	APid             *int64 `protobuf:"varint,2,opt,name=a_pid,json=aPid" json:"a_pid,omitempty"`
	NotifyType       *int32 `protobuf:"varint,3,opt,name=notify_type,json=notifyType" json:"notify_type,omitempty"`
	Udversion        *int32 `protobuf:"varint,15,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_PersonPersonInfo) Reset()                    { *m = PB_PersonPersonInfo{} }
func (m *PB_PersonPersonInfo) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonPersonInfo) ProtoMessage()               {}
func (*PB_PersonPersonInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *PB_PersonPersonInfo) GetPid() int64 {
	if m != nil && m.Pid != nil {
		return *m.Pid
	}
	return 0
}

func (m *PB_PersonPersonInfo) GetAPid() int64 {
	if m != nil && m.APid != nil {
		return *m.APid
	}
	return 0
}

func (m *PB_PersonPersonInfo) GetNotifyType() int32 {
	if m != nil && m.NotifyType != nil {
		return *m.NotifyType
	}
	return 0
}

func (m *PB_PersonPersonInfo) GetUdversion() int32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

type PB_PersonPersonInfoContral struct {
	Op               *PB_PersonPersonInfoContralType `protobuf:"varint,1,req,name=op,enum=com.sangfor.moa.protobuf.PB_PersonPersonInfoContralType" json:"op,omitempty"`
	NotifyType       *bool                           `protobuf:"varint,3,opt,name=notify_type,json=notifyType" json:"notify_type,omitempty"`
	Udversion        *bool                           `protobuf:"varint,15,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *PB_PersonPersonInfoContral) Reset()                    { *m = PB_PersonPersonInfoContral{} }
func (m *PB_PersonPersonInfoContral) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonPersonInfoContral) ProtoMessage()               {}
func (*PB_PersonPersonInfoContral) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *PB_PersonPersonInfoContral) GetOp() PB_PersonPersonInfoContralType {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return PB_PersonPersonInfoContralType_PPICT_PART
}

func (m *PB_PersonPersonInfoContral) GetNotifyType() bool {
	if m != nil && m.NotifyType != nil {
		return *m.NotifyType
	}
	return false
}

func (m *PB_PersonPersonInfoContral) GetUdversion() bool {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return false
}

// 域的结构，不排除后面会添加，公司联系人等信息，方便我们这边管理
type PB_Domain struct {
	Did              *int64  `protobuf:"varint,1,req,name=did" json:"did,omitempty"`
	Name             *string `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Ip               *string `protobuf:"bytes,3,opt,name=ip" json:"ip,omitempty"`
	Port             *int64  `protobuf:"varint,4,opt,name=port" json:"port,omitempty"`
	Udversion        *int32  `protobuf:"varint,15,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_Domain) Reset()                    { *m = PB_Domain{} }
func (m *PB_Domain) String() string            { return proto.CompactTextString(m) }
func (*PB_Domain) ProtoMessage()               {}
func (*PB_Domain) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *PB_Domain) GetDid() int64 {
	if m != nil && m.Did != nil {
		return *m.Did
	}
	return 0
}

func (m *PB_Domain) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PB_Domain) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *PB_Domain) GetPort() int64 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *PB_Domain) GetUdversion() int32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

type PB_PersonDataStatusDetail struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Type             *int32  `protobuf:"varint,2,opt,name=type" json:"type,omitempty"`
	Hide             *int32  `protobuf:"varint,3,opt,name=hide" json:"hide,omitempty"`
	ShowName         *string `protobuf:"bytes,4,opt,name=show_name,json=showName" json:"show_name,omitempty"`
	Check            *int32  `protobuf:"varint,5,opt,name=check" json:"check,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PB_PersonDataStatusDetail) Reset()                    { *m = PB_PersonDataStatusDetail{} }
func (m *PB_PersonDataStatusDetail) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonDataStatusDetail) ProtoMessage()               {}
func (*PB_PersonDataStatusDetail) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *PB_PersonDataStatusDetail) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *PB_PersonDataStatusDetail) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *PB_PersonDataStatusDetail) GetHide() int32 {
	if m != nil && m.Hide != nil {
		return *m.Hide
	}
	return 0
}

func (m *PB_PersonDataStatusDetail) GetShowName() string {
	if m != nil && m.ShowName != nil {
		return *m.ShowName
	}
	return ""
}

func (m *PB_PersonDataStatusDetail) GetCheck() int32 {
	if m != nil && m.Check != nil {
		return *m.Check
	}
	return 0
}

type PB_PersonDataStatus struct {
	Details          []*PB_PersonDataStatusDetail `protobuf:"bytes,1,rep,name=details" json:"details,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *PB_PersonDataStatus) Reset()                    { *m = PB_PersonDataStatus{} }
func (m *PB_PersonDataStatus) String() string            { return proto.CompactTextString(m) }
func (*PB_PersonDataStatus) ProtoMessage()               {}
func (*PB_PersonDataStatus) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *PB_PersonDataStatus) GetDetails() []*PB_PersonDataStatusDetail {
	if m != nil {
		return m.Details
	}
	return nil
}

type PB_DomainSet struct {
	// 暂时不要这个 optional int64 did = 1;
	HideAccount      *int32               `protobuf:"varint,2,opt,name=hide_account,json=hideAccount" json:"hide_account,omitempty"`
	ExportCustomer   *int32               `protobuf:"varint,3,opt,name=export_customer,json=exportCustomer" json:"export_customer,omitempty"`
	ExportSalechance *int32               `protobuf:"varint,4,opt,name=export_salechance,json=exportSalechance" json:"export_salechance,omitempty"`
	ExportWorkflow   *int32               `protobuf:"varint,5,opt,name=export_workflow,json=exportWorkflow" json:"export_workflow,omitempty"`
	ExportWorkreport *int32               `protobuf:"varint,6,opt,name=export_workreport,json=exportWorkreport" json:"export_workreport,omitempty"`
	ExportLegwork    *int32               `protobuf:"varint,7,opt,name=export_legwork,json=exportLegwork" json:"export_legwork,omitempty"`
	Vip              *int32               `protobuf:"varint,8,opt,name=vip" json:"vip,omitempty"`
	Pds              *PB_PersonDataStatus `protobuf:"bytes,9,opt,name=pds" json:"pds,omitempty"`
	Organization     *string              `protobuf:"bytes,12,opt,name=organization" json:"organization,omitempty"`
	Udversion        *int32               `protobuf:"varint,10,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PB_DomainSet) Reset()                    { *m = PB_DomainSet{} }
func (m *PB_DomainSet) String() string            { return proto.CompactTextString(m) }
func (*PB_DomainSet) ProtoMessage()               {}
func (*PB_DomainSet) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *PB_DomainSet) GetHideAccount() int32 {
	if m != nil && m.HideAccount != nil {
		return *m.HideAccount
	}
	return 0
}

func (m *PB_DomainSet) GetExportCustomer() int32 {
	if m != nil && m.ExportCustomer != nil {
		return *m.ExportCustomer
	}
	return 0
}

func (m *PB_DomainSet) GetExportSalechance() int32 {
	if m != nil && m.ExportSalechance != nil {
		return *m.ExportSalechance
	}
	return 0
}

func (m *PB_DomainSet) GetExportWorkflow() int32 {
	if m != nil && m.ExportWorkflow != nil {
		return *m.ExportWorkflow
	}
	return 0
}

func (m *PB_DomainSet) GetExportWorkreport() int32 {
	if m != nil && m.ExportWorkreport != nil {
		return *m.ExportWorkreport
	}
	return 0
}

func (m *PB_DomainSet) GetExportLegwork() int32 {
	if m != nil && m.ExportLegwork != nil {
		return *m.ExportLegwork
	}
	return 0
}

func (m *PB_DomainSet) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *PB_DomainSet) GetPds() *PB_PersonDataStatus {
	if m != nil {
		return m.Pds
	}
	return nil
}

func (m *PB_DomainSet) GetOrganization() string {
	if m != nil && m.Organization != nil {
		return *m.Organization
	}
	return ""
}

func (m *PB_DomainSet) GetUdversion() int32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

type PB_DomainSetContral struct {
	Op               *int32 `protobuf:"varint,1,req,name=op" json:"op,omitempty"`
	HideAccount      *int32 `protobuf:"varint,2,opt,name=hide_account,json=hideAccount" json:"hide_account,omitempty"`
	ExportCustomer   *int32 `protobuf:"varint,3,opt,name=export_customer,json=exportCustomer" json:"export_customer,omitempty"`
	ExportSalechance *int32 `protobuf:"varint,4,opt,name=export_salechance,json=exportSalechance" json:"export_salechance,omitempty"`
	ExportWorkflow   *int32 `protobuf:"varint,5,opt,name=export_workflow,json=exportWorkflow" json:"export_workflow,omitempty"`
	ExportWorkreport *int32 `protobuf:"varint,6,opt,name=export_workreport,json=exportWorkreport" json:"export_workreport,omitempty"`
	ExportLegwork    *int32 `protobuf:"varint,7,opt,name=export_legwork,json=exportLegwork" json:"export_legwork,omitempty"`
	Vip              *int32 `protobuf:"varint,8,opt,name=vip" json:"vip,omitempty"`
	Pds              *int32 `protobuf:"varint,9,opt,name=pds" json:"pds,omitempty"`
	Organization     *int32 `protobuf:"varint,12,opt,name=organization" json:"organization,omitempty"`
	Udversion        *int32 `protobuf:"varint,10,opt,name=udversion" json:"udversion,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_DomainSetContral) Reset()                    { *m = PB_DomainSetContral{} }
func (m *PB_DomainSetContral) String() string            { return proto.CompactTextString(m) }
func (*PB_DomainSetContral) ProtoMessage()               {}
func (*PB_DomainSetContral) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *PB_DomainSetContral) GetOp() int32 {
	if m != nil && m.Op != nil {
		return *m.Op
	}
	return 0
}

func (m *PB_DomainSetContral) GetHideAccount() int32 {
	if m != nil && m.HideAccount != nil {
		return *m.HideAccount
	}
	return 0
}

func (m *PB_DomainSetContral) GetExportCustomer() int32 {
	if m != nil && m.ExportCustomer != nil {
		return *m.ExportCustomer
	}
	return 0
}

func (m *PB_DomainSetContral) GetExportSalechance() int32 {
	if m != nil && m.ExportSalechance != nil {
		return *m.ExportSalechance
	}
	return 0
}

func (m *PB_DomainSetContral) GetExportWorkflow() int32 {
	if m != nil && m.ExportWorkflow != nil {
		return *m.ExportWorkflow
	}
	return 0
}

func (m *PB_DomainSetContral) GetExportWorkreport() int32 {
	if m != nil && m.ExportWorkreport != nil {
		return *m.ExportWorkreport
	}
	return 0
}

func (m *PB_DomainSetContral) GetExportLegwork() int32 {
	if m != nil && m.ExportLegwork != nil {
		return *m.ExportLegwork
	}
	return 0
}

func (m *PB_DomainSetContral) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *PB_DomainSetContral) GetPds() int32 {
	if m != nil && m.Pds != nil {
		return *m.Pds
	}
	return 0
}

func (m *PB_DomainSetContral) GetOrganization() int32 {
	if m != nil && m.Organization != nil {
		return *m.Organization
	}
	return 0
}

func (m *PB_DomainSetContral) GetUdversion() int32 {
	if m != nil && m.Udversion != nil {
		return *m.Udversion
	}
	return 0
}

func init() {
	proto.RegisterType((*PB_PhoneNumber)(nil), "com.sangfor.moa.protobuf.PB_PhoneNumber")
	proto.RegisterType((*PB_MailInfo)(nil), "com.sangfor.moa.protobuf.PB_MailInfo")
	proto.RegisterType((*PB_PersonExtendData)(nil), "com.sangfor.moa.protobuf.PB_PersonExtendData")
	proto.RegisterType((*PB_Department)(nil), "com.sangfor.moa.protobuf.PB_Department")
	proto.RegisterType((*PB_Person)(nil), "com.sangfor.moa.protobuf.PB_Person")
	proto.RegisterType((*PB_PersonContral)(nil), "com.sangfor.moa.protobuf.PB_PersonContral")
	proto.RegisterType((*PB_Group)(nil), "com.sangfor.moa.protobuf.PB_Group")
	proto.RegisterType((*PB_GroupContral)(nil), "com.sangfor.moa.protobuf.PB_GroupContral")
	proto.RegisterType((*PB_PersonGroupInfo)(nil), "com.sangfor.moa.protobuf.PB_PersonGroupInfo")
	proto.RegisterType((*PB_PersonGroupInfoContral)(nil), "com.sangfor.moa.protobuf.PB_PersonGroupInfoContral")
	proto.RegisterType((*PB_PersonPersonInfo)(nil), "com.sangfor.moa.protobuf.PB_PersonPersonInfo")
	proto.RegisterType((*PB_PersonPersonInfoContral)(nil), "com.sangfor.moa.protobuf.PB_PersonPersonInfoContral")
	proto.RegisterType((*PB_Domain)(nil), "com.sangfor.moa.protobuf.PB_Domain")
	proto.RegisterType((*PB_PersonDataStatusDetail)(nil), "com.sangfor.moa.protobuf.PB_PersonDataStatusDetail")
	proto.RegisterType((*PB_PersonDataStatus)(nil), "com.sangfor.moa.protobuf.PB_PersonDataStatus")
	proto.RegisterType((*PB_DomainSet)(nil), "com.sangfor.moa.protobuf.PB_DomainSet")
	proto.RegisterType((*PB_DomainSetContral)(nil), "com.sangfor.moa.protobuf.PB_DomainSetContral")
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PidType", PB_PidType_name, PB_PidType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_Sex", PB_Sex_name, PB_Sex_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PersonStatus", PB_PersonStatus_name, PB_PersonStatus_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PersonContralType", PB_PersonContralType_name, PB_PersonContralType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_GroupType", PB_GroupType_name, PB_GroupType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_GroupContralType", PB_GroupContralType_name, PB_GroupContralType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_GroupNotifyType", PB_GroupNotifyType_name, PB_GroupNotifyType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PersonGroupInfoContralType", PB_PersonGroupInfoContralType_name, PB_PersonGroupInfoContralType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_MessageNotifyType", PB_MessageNotifyType_name, PB_MessageNotifyType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PersonPersonInfoContralType", PB_PersonPersonInfoContralType_name, PB_PersonPersonInfoContralType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_DomainSetContralType", PB_DomainSetContralType_name, PB_DomainSetContralType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PersonDataStatusType", PB_PersonDataStatusType_name, PB_PersonDataStatusType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_PhoneNumber_PhoneType", PB_PhoneNumber_PhoneType_name, PB_PhoneNumber_PhoneType_value)
	proto.RegisterEnum("com.sangfor.moa.protobuf.PB_MailInfo_MailType", PB_MailInfo_MailType_name, PB_MailInfo_MailType_value)
}

func init() { proto.RegisterFile("contact.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 1970 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x5f, 0x73, 0xe3, 0x48,
	0x11, 0x5f, 0x59, 0x96, 0x33, 0x6e, 0x3b, 0x8e, 0x76, 0xd6, 0xb7, 0x27, 0x16, 0xee, 0xce, 0x67,
	0xee, 0x4f, 0x2e, 0x7b, 0x97, 0x3a, 0x72, 0x75, 0x70, 0x05, 0xb5, 0x7b, 0xd8, 0x89, 0xd7, 0xf1,
	0xe1, 0x7f, 0x25, 0x3b, 0x2c, 0x2f, 0x94, 0x6a, 0xd6, 0x9a, 0x38, 0x62, 0x6d, 0x49, 0x25, 0x29,
	0x9b, 0x0d, 0xbc, 0xc0, 0x1b, 0x1f, 0x01, 0x3e, 0x00, 0xef, 0x50, 0xf0, 0xc4, 0x67, 0xe1, 0xc3,
	0x50, 0xd3, 0x23, 0x4b, 0xb2, 0xe3, 0xd8, 0x86, 0xe7, 0x7b, 0x71, 0xcd, 0xfc, 0xd4, 0xdd, 0xd3,
	0xd3, 0xdd, 0xbf, 0x9e, 0x19, 0xc3, 0xfe, 0xc4, 0x73, 0x23, 0x36, 0x89, 0x8e, 0xfd, 0xc0, 0x8b,
	0x3c, 0x6a, 0x4c, 0xbc, 0xf9, 0x71, 0xc8, 0xdc, 0xe9, 0xa5, 0x17, 0x1c, 0xcf, 0x3d, 0x26, 0xe1,
	0x57, 0xd7, 0x97, 0x4f, 0x74, 0x16, 0x45, 0x6c, 0x72, 0x35, 0xe7, 0x6e, 0x2c, 0x5b, 0xff, 0xbb,
	0x02, 0x95, 0x61, 0xd3, 0x1a, 0x5e, 0x79, 0x2e, 0xef, 0x5f, 0xcf, 0x5f, 0xf1, 0x80, 0xf6, 0x21,
	0x1f, 0xdd, 0xfa, 0xdc, 0x50, 0x6a, 0xca, 0x61, 0xe5, 0xe4, 0xe4, 0xf8, 0x3e, 0x6b, 0xc7, 0xcb,
	0x7a, 0xc7, 0x38, 0x1e, 0xdf, 0xfa, 0xfc, 0xe7, 0x85, 0xde, 0xa0, 0xd9, 0xe9, 0xb6, 0x4c, 0xb4,
	0x43, 0x1f, 0x43, 0xc1, 0x45, 0x09, 0x23, 0x57, 0xcb, 0x1d, 0x16, 0xcd, 0x78, 0x56, 0xff, 0x29,
	0x14, 0x13, 0x15, 0x0a, 0x10, 0x2b, 0xe9, 0x0f, 0x28, 0x81, 0xfc, 0xf9, 0xa0, 0xd7, 0xd2, 0x15,
	0x31, 0x7a, 0x39, 0x30, 0x7f, 0xa5, 0xe7, 0x68, 0x11, 0xb4, 0xc1, 0x8b, 0x71, 0xab, 0xaf, 0xab,
	0xf5, 0xbf, 0x28, 0x50, 0x1a, 0x36, 0xad, 0x1e, 0x73, 0x66, 0x1d, 0xf7, 0xd2, 0xa3, 0xe7, 0x4b,
	0xfe, 0x1e, 0x6f, 0xf4, 0x77, 0xa1, 0x74, 0x2c, 0x06, 0xe8, 0x2b, 0x2e, 0x10, 0x7b, 0x4a, 0x21,
	0x3f, 0x67, 0xce, 0x2c, 0xf6, 0x13, 0xc7, 0xf5, 0xa7, 0x40, 0x16, 0xb2, 0xa9, 0x13, 0x0f, 0x12,
	0xcf, 0x14, 0xe1, 0xf9, 0xb0, 0x65, 0x8e, 0x06, 0x7d, 0x3d, 0x57, 0x7f, 0x06, 0x8f, 0x44, 0x50,
	0x78, 0x10, 0x7a, 0x6e, 0xeb, 0x6d, 0xc4, 0x5d, 0xfb, 0x8c, 0x45, 0x4c, 0xd8, 0x75, 0xd9, 0x5c,
	0x78, 0x88, 0x76, 0xc5, 0x58, 0x60, 0x36, 0x8b, 0x98, 0x91, 0xab, 0x29, 0x87, 0x65, 0x13, 0xc7,
	0xf5, 0xaf, 0x61, 0x7f, 0xd8, 0xb4, 0xce, 0xb8, 0xcf, 0x82, 0x48, 0xe4, 0x88, 0xea, 0xa0, 0x4e,
	0x1d, 0x1b, 0xf5, 0x54, 0x53, 0x0c, 0x13, 0x53, 0x42, 0x2d, 0x36, 0x55, 0xff, 0x37, 0x81, 0x62,
	0xb2, 0xac, 0xd0, 0xf1, 0x53, 0x1d, 0xdf, 0xb1, 0xe9, 0x39, 0x68, 0x3e, 0x46, 0x28, 0x87, 0x11,
	0xfa, 0x68, 0x73, 0x46, 0x1d, 0x1b, 0xe3, 0x52, 0x1e, 0x76, 0xce, 0x2c, 0xb9, 0xb1, 0x46, 0xd7,
	0x94, 0x06, 0x92, 0xd5, 0xd5, 0x74, 0x75, 0xfa, 0x63, 0xd8, 0x9f, 0x79, 0x53, 0xc7, 0xb5, 0xd8,
	0x64, 0xe2, 0x5d, 0xbb, 0x91, 0x91, 0xc7, 0x8f, 0x65, 0x04, 0x1b, 0x12, 0xa3, 0x27, 0xa0, 0x86,
	0xfc, 0xad, 0xa1, 0xa1, 0x03, 0xb5, 0x8d, 0x0e, 0x8c, 0xf8, 0x5b, 0x53, 0x08, 0xd3, 0x67, 0xa0,
	0xf9, 0x57, 0x5e, 0xe4, 0x19, 0x85, 0x9a, 0x72, 0x58, 0x3a, 0xf9, 0x74, 0xa3, 0x56, 0x23, 0x29,
	0x6c, 0x53, 0x6a, 0xd1, 0x27, 0x40, 0x7c, 0x2f, 0x74, 0x22, 0xc7, 0x73, 0x8d, 0x3d, 0x74, 0x29,
	0x99, 0xd3, 0x5f, 0x42, 0xc1, 0x17, 0xa5, 0x17, 0x1a, 0xa4, 0xa6, 0x1e, 0x96, 0x4e, 0x0e, 0x77,
	0x2d, 0x72, 0x33, 0xd6, 0xa3, 0xbf, 0x00, 0x4d, 0x94, 0x47, 0x68, 0x14, 0xd1, 0xc0, 0xc7, 0x3b,
	0x55, 0x9d, 0x29, 0x75, 0xe8, 0xbb, 0xb0, 0x17, 0x32, 0xeb, 0xc6, 0x0b, 0x6c, 0x03, 0x6a, 0xaa,
	0xa0, 0x44, 0xc8, 0x5e, 0x7a, 0x81, 0x4d, 0x1b, 0x50, 0x08, 0x23, 0x16, 0x5d, 0x87, 0x46, 0x09,
	0x23, 0xf5, 0xd9, 0x66, 0xbf, 0x30, 0xe1, 0x23, 0x54, 0x30, 0x63, 0x45, 0xfa, 0x25, 0x54, 0x27,
	0x57, 0xcc, 0x9d, 0x72, 0x4b, 0x02, 0x56, 0xc0, 0x59, 0xe8, 0xb9, 0x46, 0x19, 0x43, 0x40, 0xe5,
	0xb7, 0x58, 0x07, 0xbf, 0x50, 0x03, 0xf6, 0x98, 0x6d, 0x07, 0x3c, 0x0c, 0x8d, 0x7d, 0x14, 0x5a,
	0x4c, 0xe9, 0x07, 0x50, 0x9a, 0x04, 0x9c, 0x45, 0xdc, 0x8a, 0x9c, 0x39, 0x37, 0x2a, 0x35, 0xe5,
	0x50, 0x35, 0x41, 0x42, 0x63, 0x47, 0xe6, 0x9e, 0x4d, 0x22, 0xe7, 0x4d, 0x22, 0x72, 0x80, 0x22,
	0xe5, 0x05, 0x88, 0x42, 0xef, 0x01, 0x70, 0x37, 0x0a, 0x6e, 0xa5, 0x84, 0x8e, 0x12, 0x45, 0x44,
	0xf0, 0x73, 0x07, 0x4a, 0x76, 0x52, 0xf1, 0xa1, 0xf1, 0x10, 0xe3, 0xb9, 0x39, 0xd9, 0x29, 0x43,
	0xcc, 0xac, 0xae, 0x58, 0x69, 0xc6, 0xd9, 0x9b, 0xd8, 0x17, 0x2a, 0x57, 0x42, 0x04, 0x57, 0xfa,
	0x08, 0x2a, 0xec, 0x3a, 0xf2, 0xac, 0x1b, 0x16, 0xc7, 0xc6, 0x78, 0x54, 0x53, 0x0e, 0x35, 0xb3,
	0x2c, 0xd0, 0x97, 0x4c, 0x06, 0x45, 0x6c, 0x9a, 0xcf, 0xfd, 0x99, 0x77, 0xcb, 0xb9, 0xe5, 0xd8,
	0x46, 0x15, 0x43, 0x02, 0x0b, 0xa8, 0x63, 0xd3, 0x4f, 0xe0, 0xe0, 0x86, 0xbf, 0xb2, 0x5c, 0x2f,
	0x72, 0x2e, 0x6f, 0x2d, 0x24, 0xd6, 0x3b, 0x68, 0x67, 0xff, 0x86, 0xbf, 0xea, 0x23, 0x8a, 0xdd,
	0xe2, 0x43, 0x28, 0x5f, 0x39, 0x36, 0x4f, 0x78, 0xf1, 0x18, 0x85, 0x4a, 0x02, 0x5b, 0xd0, 0xe2,
	0x47, 0x50, 0xbc, 0xb6, 0xdf, 0xf0, 0x20, 0x14, 0x45, 0xfa, 0x59, 0x4d, 0x39, 0xdc, 0x37, 0x53,
	0x80, 0xb6, 0x61, 0x8f, 0x63, 0x13, 0x09, 0x8d, 0xa7, 0x18, 0x95, 0x2f, 0x76, 0x28, 0x87, 0xb4,
	0xed, 0x98, 0x0b, 0x6d, 0xa4, 0x02, 0x0b, 0x43, 0x2c, 0xb8, 0x63, 0xec, 0x37, 0xc9, 0xbc, 0xfe,
	0xc7, 0x02, 0xe8, 0x89, 0xf2, 0xa9, 0xe7, 0x46, 0x01, 0x9b, 0xd1, 0xe7, 0x90, 0xf3, 0x7c, 0x6c,
	0x21, 0xdb, 0x1a, 0xea, 0x92, 0x9e, 0xd8, 0xb6, 0x99, 0xf3, 0x7c, 0x5a, 0xcd, 0x76, 0x1c, 0xb2,
	0xae, 0x7b, 0x90, 0x4d, 0xdd, 0x83, 0xac, 0x74, 0x0f, 0x3d, 0xed, 0x1e, 0x44, 0xf6, 0x86, 0x6a,
	0xb6, 0x37, 0x90, 0xfb, 0x28, 0x4f, 0x32, 0x94, 0x7f, 0x9c, 0xa1, 0xbc, 0xf8, 0xb2, 0x20, 0x72,
	0x35, 0x25, 0x32, 0x5a, 0x5a, 0xc3, 0x50, 0x14, 0x8f, 0x19, 0xfa, 0x78, 0x89, 0xa1, 0x64, 0x27,
	0xda, 0x91, 0x5d, 0x68, 0x47, 0x36, 0xd2, 0x8e, 0x6c, 0xa7, 0x1d, 0xd9, 0x4a, 0x3b, 0x92, 0xa5,
	0x5d, 0x6d, 0x95, 0x76, 0xe2, 0xfb, 0x16, 0x36, 0x91, 0xed, 0x6c, 0x22, 0xdb, 0xd9, 0x44, 0x76,
	0x61, 0x13, 0xd9, 0x85, 0x4d, 0x64, 0x0b, 0x9b, 0x48, 0x96, 0x4d, 0x46, 0x96, 0x4d, 0x18, 0xef,
	0x78, 0x5a, 0xff, 0x8f, 0x0a, 0x64, 0xd8, 0xb4, 0xda, 0x81, 0x77, 0xed, 0xaf, 0x39, 0x72, 0xdb,
	0xa0, 0x4d, 0x33, 0xc7, 0xe7, 0x27, 0x1b, 0xf9, 0x80, 0x46, 0xf0, 0x00, 0x2d, 0xb6, 0xc7, 0xd6,
	0xe9, 0xc5, 0x68, 0x3c, 0xe8, 0x99, 0x52, 0x7f, 0xed, 0xe9, 0xf9, 0x43, 0x28, 0x7a, 0x37, 0x2e,
	0x0f, 0x2c, 0x71, 0x66, 0xe7, 0xb1, 0x63, 0x11, 0x04, 0x86, 0x8e, 0x9d, 0x9e, 0x80, 0xda, 0xff,
	0x75, 0x02, 0xae, 0xd4, 0x51, 0xe1, 0x4e, 0xfb, 0xce, 0x94, 0xe0, 0xde, 0x72, 0xe7, 0xff, 0x18,
	0x2a, 0x69, 0x29, 0x58, 0x22, 0x20, 0x04, 0xb5, 0xf7, 0x53, 0xb4, 0xed, 0xd8, 0xa2, 0x44, 0x7c,
	0x6c, 0x00, 0xd6, 0xc4, 0x8d, 0x90, 0x41, 0xaa, 0x59, 0x94, 0xc8, 0xa9, 0x1b, 0x89, 0xcd, 0x4d,
	0x45, 0x3c, 0xf0, 0x2b, 0xc8, 0xcd, 0x21, 0x20, 0x3e, 0x7e, 0x08, 0xe5, 0x80, 0xcf, 0x58, 0xc4,
	0x6d, 0xcb, 0x71, 0x2f, 0x3d, 0xe4, 0x53, 0xd1, 0x2c, 0xc5, 0x18, 0xde, 0xec, 0x36, 0xb7, 0x47,
	0x0a, 0x79, 0xdf, 0x89, 0x7b, 0xa3, 0x6a, 0xe2, 0x58, 0x60, 0x53, 0x81, 0x7d, 0x2e, 0x31, 0x31,
	0xae, 0xff, 0x4b, 0x85, 0x83, 0x45, 0x66, 0x16, 0x0d, 0xee, 0x59, 0xa6, 0xc1, 0x7d, 0xb1, 0x3d,
	0xa1, 0x6b, 0xfa, 0xdb, 0x34, 0xdb, 0xdf, 0xa6, 0xf7, 0xf6, 0xb7, 0x3b, 0xf9, 0x25, 0x99, 0xfc,
	0x56, 0xb3, 0xf9, 0x25, 0x1b, 0xd2, 0x46, 0x36, 0xa5, 0x8d, 0x6c, 0x4b, 0x1b, 0xd9, 0x9e, 0x36,
	0xb2, 0x31, 0x6d, 0x64, 0x4b, 0xda, 0xc8, 0x96, 0xb4, 0x91, 0xf5, 0x69, 0xc3, 0x28, 0xad, 0xa4,
	0x0d, 0x31, 0x4c, 0xdb, 0x3f, 0x15, 0xa0, 0xc9, 0x01, 0x83, 0x59, 0x40, 0xe3, 0x77, 0xaf, 0xb7,
	0x31, 0x63, 0x73, 0x29, 0x63, 0x9f, 0x83, 0x3a, 0x75, 0x23, 0xcc, 0x43, 0xe5, 0xe4, 0xf3, 0xed,
	0xe9, 0x4d, 0xdb, 0x8c, 0x29, 0x14, 0x45, 0x00, 0x7e, 0xe7, 0x39, 0xae, 0x8c, 0x7f, 0x4c, 0x4a,
	0x01, 0x60, 0xf4, 0x97, 0x76, 0x57, 0xc5, 0x33, 0x3d, 0x05, 0xea, 0xff, 0x50, 0xe0, 0x07, 0x77,
	0xbd, 0x5e, 0x94, 0x5d, 0x3b, 0x53, 0x76, 0x3f, 0xdb, 0xe1, 0x5c, 0x5d, 0x35, 0x90, 0x14, 0xa0,
	0x9e, 0xee, 0x90, 0xdc, 0xe3, 0x33, 0xd9, 0xe4, 0x73, 0x36, 0x23, 0xf5, 0x3f, 0x64, 0x5e, 0x2d,
	0xf2, 0x77, 0x39, 0xd2, 0xca, 0x22, 0xd2, 0x8f, 0x40, 0x63, 0x58, 0xc8, 0x39, 0xc4, 0xf2, 0x4c,
	0x14, 0xf1, 0x07, 0x50, 0xca, 0x36, 0x6f, 0x15, 0x23, 0x02, 0x6e, 0xda, 0xb9, 0x97, 0x16, 0x3f,
	0x58, 0x0d, 0xd8, 0xdf, 0x14, 0x78, 0xb2, 0x66, 0xf5, 0x45, 0xc4, 0xce, 0x33, 0x11, 0xfb, 0x66,
	0x87, 0x88, 0xdd, 0xb1, 0x90, 0x84, 0x6c, 0x8d, 0x9f, 0x64, 0xb3, 0x9f, 0x4b, 0x41, 0x0a, 0xf1,
	0x8d, 0x75, 0xe6, 0xcd, 0x99, 0x83, 0x6f, 0x2c, 0x3b, 0x2d, 0x42, 0x7b, 0xe9, 0x5d, 0x96, 0x3e,
	0xf1, 0x2a, 0x90, 0x73, 0xfc, 0xb8, 0xdb, 0xe7, 0x1c, 0x1f, 0x2b, 0xdf, 0x0b, 0xa2, 0xb8, 0xa2,
	0x70, 0xbc, 0x25, 0x38, 0x7f, 0xce, 0x56, 0x93, 0xb8, 0xd3, 0xc9, 0x53, 0xf5, 0x8c, 0x47, 0xcc,
	0x99, 0x09, 0x2f, 0x5e, 0xf3, 0x5b, 0x4c, 0x50, 0xd1, 0x14, 0x43, 0xb1, 0x42, 0xd2, 0x96, 0xb4,
	0xf4, 0x51, 0x2b, 0x0e, 0xc9, 0x38, 0x31, 0x38, 0x16, 0xc5, 0x12, 0x5e, 0x79, 0x37, 0x16, 0xba,
	0x2c, 0xdf, 0x6b, 0x44, 0x00, 0x7d, 0xe1, 0x76, 0x15, 0xb4, 0xc9, 0x15, 0x9f, 0xbc, 0xc6, 0xae,
	0xa4, 0x99, 0x72, 0x52, 0xb7, 0x33, 0x45, 0x92, 0x7a, 0x42, 0x7b, 0xb0, 0x67, 0xa3, 0x37, 0xa1,
	0xa1, 0xe0, 0x1d, 0xf5, 0xab, 0x1d, 0x92, 0xb4, 0xba, 0x13, 0x73, 0x61, 0xa3, 0xfe, 0x57, 0x15,
	0xca, 0x49, 0x98, 0x47, 0x3c, 0xba, 0x73, 0xec, 0xe7, 0xee, 0x5e, 0xa2, 0x3f, 0x85, 0x03, 0xfe,
	0x56, 0x04, 0xd3, 0x9a, 0x5c, 0x87, 0x91, 0x37, 0xe7, 0x41, 0xbc, 0xd7, 0x8a, 0x84, 0x4f, 0x63,
	0x94, 0x3e, 0x85, 0x87, 0xb1, 0x60, 0xc8, 0x66, 0x5c, 0x5c, 0xc9, 0x26, 0x72, 0xf7, 0x9a, 0xa9,
	0xcb, 0x0f, 0xa3, 0x04, 0xcf, 0x58, 0xbd, 0xf1, 0x82, 0xd7, 0x97, 0x33, 0xef, 0x26, 0x8e, 0x47,
	0x6c, 0xf5, 0x65, 0x8c, 0x66, 0xac, 0x0a, 0xc1, 0x80, 0x63, 0x8a, 0x0b, 0x59, 0xab, 0x2f, 0x13,
	0x5c, 0x34, 0xe8, 0x58, 0x78, 0xc6, 0xa7, 0x42, 0x1e, 0x3b, 0xb8, 0x66, 0xee, 0x4b, 0xb4, 0x2b,
	0x41, 0x91, 0xd9, 0x37, 0x8e, 0x8f, 0xcd, 0x5b, 0x33, 0xc5, 0x90, 0x7e, 0x0b, 0xaa, 0x6f, 0xcb,
	0x4b, 0xea, 0x6e, 0xef, 0x80, 0x34, 0xc6, 0xa6, 0xd0, 0xa4, 0x75, 0x28, 0x7b, 0xc1, 0x94, 0xb9,
	0xce, 0xef, 0x19, 0xde, 0x8f, 0xe5, 0x7b, 0x70, 0x09, 0x5b, 0x2e, 0x46, 0x58, 0x2d, 0xc6, 0x3f,
	0xa9, 0x58, 0x02, 0x49, 0x6e, 0x16, 0x14, 0xad, 0x24, 0x14, 0xd5, 0x90, 0x68, 0xdf, 0xa7, 0x4c,
	0xa6, 0x4c, 0x4f, 0x53, 0xa6, 0xdd, 0x9f, 0x03, 0xed, 0x7f, 0xc9, 0xc1, 0x11, 0x07, 0x48, 0xff,
	0xa3, 0xa1, 0x3a, 0x2c, 0xfd, 0x4b, 0xa3, 0x3f, 0xa0, 0x15, 0x00, 0x44, 0x2e, 0x9a, 0xdd, 0xce,
	0xa9, 0xae, 0xd0, 0x7d, 0x28, 0x8a, 0x79, 0xe3, 0xac, 0xd7, 0xe9, 0xeb, 0x39, 0x5a, 0x05, 0x5d,
	0x4c, 0x47, 0x17, 0xcd, 0xd1, 0xa9, 0xd9, 0x19, 0x8e, 0x3b, 0x83, 0xbe, 0xae, 0x2e, 0xcc, 0x8c,
	0x2e, 0x9a, 0xe3, 0x46, 0xb3, 0xdb, 0xd2, 0xf3, 0x47, 0xef, 0x43, 0x41, 0xfe, 0x13, 0x43, 0x09,
	0xe4, 0x7b, 0x0d, 0xfc, 0x57, 0x0e, 0xa0, 0xf0, 0xa2, 0x85, 0x63, 0xe5, 0xe8, 0x3b, 0xbc, 0x51,
	0x65, 0xff, 0x7f, 0x10, 0x82, 0x9d, 0x7e, 0x67, 0x2c, 0x05, 0x1b, 0x17, 0xe3, 0xf3, 0xd6, 0x99,
	0xfc, 0x73, 0x6c, 0xd0, 0x8f, 0xff, 0xc2, 0x03, 0x28, 0x5c, 0xc8, 0xb1, 0x4a, 0x8b, 0xa0, 0x75,
	0x5b, 0x8d, 0x5f, 0x8b, 0xb5, 0x7e, 0x02, 0xd5, 0x75, 0xef, 0x48, 0x5a, 0x06, 0x32, 0x3c, 0x1d,
	0x5b, 0xc3, 0x86, 0x29, 0x8c, 0x96, 0x60, 0x4f, 0xcc, 0x1a, 0xdd, 0xae, 0xae, 0x1c, 0xfd, 0x16,
	0x9b, 0x44, 0x72, 0xd5, 0x16, 0xbb, 0x4c, 0x2e, 0xdb, 0xfa, 0x03, 0x7a, 0x00, 0xa5, 0xf6, 0xd8,
	0x1a, 0xbc, 0x78, 0xd1, 0x39, 0xed, 0x34, 0xba, 0xba, 0x22, 0x4c, 0x09, 0xc0, 0x6c, 0x37, 0x44,
	0x10, 0x4a, 0xb0, 0x27, 0xa4, 0xcf, 0x1b, 0x63, 0x5d, 0xa5, 0x14, 0x2a, 0xed, 0xb1, 0xf5, 0xdd,
	0xa0, 0x69, 0x99, 0xad, 0x6e, 0x63, 0xdc, 0x3a, 0xd3, 0xf3, 0x47, 0x5f, 0x62, 0x9d, 0xaf, 0x5e,
	0xfc, 0xd0, 0xca, 0x92, 0x43, 0xed, 0xc4, 0xa1, 0xaf, 0xf0, 0xaa, 0xb2, 0x72, 0x97, 0x40, 0x85,
	0xfe, 0xd8, 0x1a, 0x5e, 0x8c, 0xce, 0x63, 0xaf, 0xfa, 0x63, 0xab, 0x3f, 0x90, 0x80, 0x72, 0xf4,
	0x1c, 0xde, 0xdb, 0x78, 0xd0, 0x63, 0x32, 0xdb, 0x9d, 0x74, 0x49, 0x91, 0x4c, 0x9c, 0xcb, 0x45,
	0xbf, 0xc6, 0xc0, 0xf5, 0x78, 0x18, 0xb2, 0x29, 0x5f, 0x5e, 0xb6, 0xb7, 0xb4, 0x6c, 0x6f, 0x69,
	0xd9, 0x6f, 0xe1, 0xfd, 0xcd, 0xa7, 0x25, 0xae, 0x3b, 0x5c, 0x59, 0x77, 0x98, 0xae, 0xfb, 0x0d,
	0xbc, 0xbb, 0xa6, 0x0d, 0x24, 0x9a, 0x67, 0xa3, 0x65, 0x4d, 0x9c, 0x4b, 0x4d, 0x07, 0x35, 0x57,
	0xfb, 0x53, 0x46, 0x73, 0x6c, 0x35, 0x1b, 0xa3, 0xce, 0xa9, 0x74, 0x1b, 0xe7, 0xad, 0xdf, 0x8c,
	0x5b, 0x7d, 0x51, 0x49, 0xef, 0xc0, 0x43, 0x04, 0x64, 0x96, 0x63, 0xb9, 0x1c, 0x7d, 0x0c, 0x34,
	0x0b, 0xc7, 0xe2, 0xea, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xdf, 0x7b, 0xf9, 0x3a, 0x13, 0x17,
	0x00, 0x00,
}
