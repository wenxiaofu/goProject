// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encrypt.proto

package com_sangfor_moa_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 加密数据请求
type PB_AthCryptReq struct {
	PublicData       []byte `protobuf:"bytes,1,opt,name=public_data,json=publicData" json:"public_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_AthCryptReq) Reset()                    { *m = PB_AthCryptReq{} }
func (m *PB_AthCryptReq) String() string            { return proto.CompactTextString(m) }
func (*PB_AthCryptReq) ProtoMessage()               {}
func (*PB_AthCryptReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *PB_AthCryptReq) GetPublicData() []byte {
	if m != nil {
		return m.PublicData
	}
	return nil
}

type PB_AthCryptRsp struct {
	Result           *int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	PublicData       []byte `protobuf:"bytes,2,opt,name=public_data,json=publicData" json:"public_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PB_AthCryptRsp) Reset()                    { *m = PB_AthCryptRsp{} }
func (m *PB_AthCryptRsp) String() string            { return proto.CompactTextString(m) }
func (*PB_AthCryptRsp) ProtoMessage()               {}
func (*PB_AthCryptRsp) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *PB_AthCryptRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *PB_AthCryptRsp) GetPublicData() []byte {
	if m != nil {
		return m.PublicData
	}
	return nil
}

func init() {
	proto.RegisterType((*PB_AthCryptReq)(nil), "com.sangfor.moa.protobuf.PB_AthCryptReq")
	proto.RegisterType((*PB_AthCryptRsp)(nil), "com.sangfor.moa.protobuf.PB_AthCryptRsp")
}

func init() { proto.RegisterFile("encrypt.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xcd, 0x4b, 0x2e,
	0xaa, 0x2c, 0x28, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x48, 0xce, 0xcf, 0xd5, 0x2b,
	0x4e, 0xcc, 0x4b, 0x4f, 0xcb, 0x2f, 0xd2, 0xcb, 0xcd, 0x4f, 0x84, 0x08, 0x27, 0x95, 0xa6, 0x29,
	0x19, 0x72, 0xf1, 0x05, 0x38, 0xc5, 0x3b, 0x96, 0x64, 0x38, 0x83, 0x94, 0x07, 0xa5, 0x16, 0x0a,
	0xc9, 0x73, 0x71, 0x17, 0x94, 0x26, 0xe5, 0x64, 0x26, 0xc7, 0xa7, 0x24, 0x96, 0x24, 0x4a, 0x30,
	0x2a, 0x30, 0x6a, 0xf0, 0x04, 0x71, 0x41, 0x84, 0x5c, 0x12, 0x4b, 0x12, 0x95, 0x3c, 0x51, 0xb5,
	0x14, 0x17, 0x08, 0x89, 0x71, 0xb1, 0x15, 0xa5, 0x16, 0x97, 0xe6, 0x94, 0x80, 0x55, 0xb3, 0x06,
	0x41, 0x79, 0xe8, 0x46, 0x31, 0xa1, 0x1b, 0x05, 0x08, 0x00, 0x00, 0xff, 0xff, 0x72, 0x37, 0x2b,
	0xd2, 0xa7, 0x00, 0x00, 0x00,
}
