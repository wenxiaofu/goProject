// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package com_sangfor_moa_protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MyMsg struct {
	Id               *int32  `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Str              *string `protobuf:"bytes,2,req,name=str" json:"str,omitempty"`
	Opt              *int32  `protobuf:"varint,3,opt,name=opt" json:"opt,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MyMsg) Reset()                    { *m = MyMsg{} }
func (m *MyMsg) String() string            { return proto.CompactTextString(m) }
func (*MyMsg) ProtoMessage()               {}
func (*MyMsg) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *MyMsg) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MyMsg) GetStr() string {
	if m != nil && m.Str != nil {
		return *m.Str
	}
	return ""
}

func (m *MyMsg) GetOpt() int32 {
	if m != nil && m.Opt != nil {
		return *m.Opt
	}
	return 0
}

func init() {
	proto.RegisterType((*MyMsg)(nil), "com.sangfor.moa.protobuf.myMsg")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor7) }

var fileDescriptor7 = []byte{
	// 112 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x92, 0x48, 0xce, 0xcf, 0xd5, 0x2b, 0x4e, 0xcc, 0x4b,
	0x4f, 0xcb, 0x2f, 0xd2, 0xcb, 0xcd, 0x4f, 0x84, 0x08, 0x27, 0x95, 0xa6, 0x29, 0x59, 0x73, 0xb1,
	0xe6, 0x56, 0xfa, 0x16, 0xa7, 0x0b, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x69,
	0xb0, 0x06, 0x31, 0x65, 0xa6, 0x08, 0x09, 0x70, 0x31, 0x17, 0x97, 0x14, 0x49, 0x30, 0x29, 0x30,
	0x69, 0x70, 0x06, 0x81, 0x98, 0x20, 0x91, 0xfc, 0x82, 0x12, 0x09, 0x66, 0x05, 0x46, 0x0d, 0xd6,
	0x20, 0x10, 0x13, 0x10, 0x00, 0x00, 0xff, 0xff, 0x0e, 0x15, 0x6b, 0x59, 0x63, 0x00, 0x00, 0x00,
}
